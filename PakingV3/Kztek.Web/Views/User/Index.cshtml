@using Kztek.Model.CustomModel
@using Kztek.Web.Core.Extensions
@using Kztek.Web.Attributes
@using Kztek.Web.Core.Functions

@model PageModel<Kztek.Model.Models.User>

@{
    ViewBag.Title = "Hệ thống";
    string controller = this.ViewContext.RouteData.Values["controller"].ToString();
    var _user = Kztek.Web.Core.Functions.GetCurrentUser.GetUser();

    string groupID = (string)ViewBag.GroupID;
    Layout = Kztek.Web.Core.Functions.FunctionHelper.GetLayoutByGroup(groupID);

    string path = HttpContext.Current.Request.Url.PathAndQuery;

    var listUserSelected = (List<string>)ViewBag.selectedUserValue;

    var Dictionary = FunctionHelper.GetLocalizeDictionary("User", "Index");
    var DictionaryAction = FunctionHelper.GetLocalizeDictionary("Home", "Action");
    var DictionaryNoti = FunctionHelper.GetLocalizeDictionary("Home", "notification");
}

<div class="page-header">
    <h1>
        @Dictionary["Title"]
    </h1>
</div>
<div class="row">
    @using (Html.BeginForm("Index", "User", FormMethod.Get))
    {
        <div class="col-md-3 col-lg-3 col-xs-12 col-sm-12 divboxmd">
            <input type="text" name="key" value="@ViewBag.Key" placeholder="@Dictionary["KeywordPlaceholder"]" class="form-control" />
        </div>
        <div class="col-md-3 col-lg-3 col-xs-12 col-sm-12 divboxmd">
            <button class="btn btn-sm btn-primary" type="submit"><i class="fa fa-search" aria-hidden="true"></i> @DictionaryAction["Search"] </button>
            <a href="@Url.Action("Index", "User", new { group = groupID })" class="btn btn-primary btn-white btn-bold" type="submit">
                <i class="fa fa-refresh green" aria-hidden="true"></i>
                @DictionaryAction["Reset"]
            </a>
        </div>
    }
</div>

<div class="hr hr-18 dotted hr-24"></div>

<div class="row">
    <div class="col-xs-6">
        <div id="boxUserAction">

        </div>
    </div>
    <div class="col-xs-6">
        <div class="pull-right">
            @if (CheckAuthorizeAction.CheckActionPemission(controller, "Create"))
            {
                <a href="@Url.Action("Create", controller, new { group = groupID })" class="btn btn-sm btn-primary btn-white btn-bold">
                    <i class=" fa fa-plus"></i> @DictionaryAction["Create"]
                </a>
            }
        </div>
    </div>
</div>

<div class="hr hr-18 dotted hr-24"></div>

<div class="row">
    <div class="col-xs-12">
        <table id="simple-table" class="table  table-bordered table-hover">
            <thead>
                <tr>
                    <th class="center">
                        <label class="pos-rel">
                            <input type="checkbox" class="ace" id="chkCheckALL" />
                            <span class="lbl"></span>
                        </label>
                    </th>
                    <th class="center">@Dictionary["Name"] </th>
                    <th class="center hidden-480">@Dictionary["Phone"]</th>
                    <th class="center hidden-480">@Dictionary["Username"] </th>
                    <th class="center hidden-480">@Dictionary["DateCreated"] </th>
                    <th class="center">@Dictionary["Status"] </th>
                    <th class="center">@Dictionary["IsAdmin"] </th>
                    <th class="center">@Dictionary["Roles"] </th>
                    <th class="center">@Dictionary["Action"] </th>
                </tr>
            </thead>

            <tbody>
                @if (Model.Data.Any())
                {
                    foreach (var item in Model.Data)
                    {
                        <tr>
                            <td class="center">
                                <label class="pos-rel">
                                    <input type="checkbox" id="@item.Id.ToString()" name="Id" value="@item.Id.ToString()" class="ace chkCheck" @string.Format("{0}", (listUserSelected != null && listUserSelected.Any(n => n.Equals(item.Id))) ? "checked" : "") />
                                    <span class="lbl"></span>
                                </label>
                            </td>

                            <td class="text-left">
                                @item.Name
                            </td>

                            <td class="text-left hidden-480">
                                @item.Phone
                            </td>

                            <td class="text-left hidden-480">
                                @item.Username
                            </td>

                            <td class="center hidden-480">
                                @if (item.DateCreated != null)
                                {
                                    <span>@Convert.ToDateTime(item.DateCreated).ToString("dd/MM/yyyy")</span>
                                }
                            </td>

                            <td class="center">
                                @if (item.Active)
                                {
                                    <span class="label label-sm label-success">@Dictionary["Active"] </span>
                                }
                                else
                                {
                                    <span class="label label-sm label-warning">@Dictionary["Inactive"] </span>
                                }
                            </td>

                            <td class="center">
                                @if (item.Admin)
                                {
                                    <span class="label label-sm label-danger">@Dictionary["IsAdminTrue"] </span>
                                }
                                else
                                {
                                    <span class="label label-sm label-info">@Dictionary["IsAdminFalse"] </span>
                                }
                            </td>
                            <td class="text-left">
                                @Html.Action("RoleList", "User", new { userId = item.Id })
                            </td>
                            <td class="center">
                                <div class="btn-group">
                                    @if (CheckAuthorizeAction.CheckActionPemission(controller, "Update"))
                                    {
                                        <a href="@Url.Action("Update", controller, new { @id = item.Id , pageNumber = Model.PageIndex, group = groupID })" class="green">
                                            <i class="ace-icon fa fa-pencil bigger-120"></i>
                                        </a>
                                    }

                                    @Html.Action("Actions", "Home", new { ActionName = "Delete", ControllerName = controller, id = item.Id })
                                    @Html.Action("Actions", "Home", new { ActionName = "RestoreDefaultPass", ControllerName = controller, id = item.Id })
                                </div>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div><!-- /.span -->
    @if (Model.Data.Any())
    {
        <div class="col-xs-12">
            <div class="pull-right">
                @Html.GeneratePagingFooter(Model.TotalPage, Model.PageIndex, Model.PageSize, "pagination", x => Url.Action("Index", "User", new
           {
               page = x,
               key = ViewBag.Key,
           }))
            </div>
        </div>
    }
</div><!-- /.row -->
<input type="hidden" name="_deleteConfirm" value="@DictionaryNoti["deleteConfirm"]" />
<input type="hidden" name="_noti" value="@DictionaryNoti["notification"]" />

<input type="hidden" name="_re-pass" value="@DictionaryNoti["re-pass"]" />
<input type="hidden" name="_Successful" value="@DictionaryNoti["Successful_recovery"]" />
<input type="hidden" name="_failed" value="@DictionaryNoti["Recovery_failed"]" />
@section scripts{
    <script src="~/Scripts/Ext/UserController.js"></script>
    <script>
        $(document).ready(function () {
            UserController.loadModalButton('@Model.TotalItem', '@path');

           DeleteSubmit('/User/Delete');

            $("#chkCheckALL").click(function () {
                if ($(this).is(":checked")) {
                    var count = 0;
                    var choices = [];
                    $('.chkCheck').each(function () {
                        if ($(this).is(":checked")) {
                            var cn = $(this).val();
                            choices.push(cn);

                            count++;
                        }
                    });

                    UserController.AddRemoveUserChoice(choices, '@Model.TotalItem');

                }
            });

            $('.chkCheck').click(function () {
                var choices = [];
                var count = 0;
                $('.chkCheck').each(function () {
                    if ($(this).is(":checked")) {
                        var cn = $(this).val();
                        choices.push(cn);
                        count++;
                    }
                });

                UserController.AddRemoveUserChoice(choices, '@Model.TotalItem');
            });

            //Phục hồi mật khẩu 1 bản ghi
            $('.btnRes').click(function () {
                var _re_pass = $('input[name=_re-pass]').val();
                var _Successful = $('input[name=_Successful]').val();
                var _failed = $('input[name=_failed]').val();
                var _notification = $('input[name=_noti]').val();

                var cmd = $(this);
                var _id = cmd.attr('idata');
                if (confirm(_re_pass)) {
                    $.ajax({
                        url: '/User/RestorePassToDefault',
                        data: { id: _id },
                        type: 'json',
                        //async:false,
                        success: function (data) {
                            if (data.isSuccess) {
                                toastr.success(_Successful, _notification);
                            } else {
                                toastr.error(_failed, _notification);
                            }
                        }
                    });
                }
            });


        });
    </script>
}