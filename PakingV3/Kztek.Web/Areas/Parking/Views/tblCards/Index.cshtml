@using Kztek.Web.Core.Functions
@using Kztek.Model.CustomModel
@using Kztek.Web.Core.Extensions
@using Kztek.Web.Attributes
@model PageModel<Kztek.Model.Models.tblCardCustomViewModel>
@{
    ViewBag.Title = "Danh sách thẻ";
    string controller = this.ViewContext.RouteData.Values["controller"].ToString();
    bool isTranserco = Convert.ToBoolean(ViewBag.ISTRANSERCO);
    var checkbytype = (string)ViewBag.isCheckByTimeValue;
    string columnValue = Convert.ToString(ViewBag.ColumnQuery);
    bool isDesc = Convert.ToBoolean(ViewBag.Desc);
    var listmoney = new List<Kztek.Model.Models.tblActiveCard_TC>();
    
        listmoney = (List<Kztek.Model.Models.tblActiveCard_TC>)ViewBag.ListMoney;
    
}
<div class="page-header">
    <h1>

        @ViewBag.Title


    </h1>
</div>

<div class="row">
    <div class="col-xs-12">

        @using (Html.BeginForm("Index", "tblCards", FormMethod.Get, new { id = "tblCard" }))
        {
            @Html.Hidden("columnQuery", columnValue);
            @Html.Hidden("desc", isDesc);
            <div class="row">
                <div class="col-md-2 col-xs-12 divboxmd">
                    <label class="col-sm-12 control-label no-padding-right">Từ Khóa</label>
                    <div class="">
                        <input type="text" name="key" value="@ViewBag.KeyWord" class="form-control" placeholder="Tên khách hàng..." />
                    </div>


                </div>

                <div class="col-md-3 col-xs-12 divboxmd">
                    <label class="col-sm-12 control-label no-padding-right">Từ ngày</label>
                    <div class="input-group">
                        @Html.TextBox("fromdate", (string)ViewBag.fromdateValue, new { @class = "form-control datepicker" })
                        <span class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </span>
                    </div>
                </div>
                <div class="col-md-3 col-xs-12 divboxmd ">
                    <label class="col-sm-12 control-label no-padding-right">Đến ngày</label>
                    <div class="input-group">
                        @Html.TextBox("todate", (string)ViewBag.todateValue, new { @class = "form-control datepicker" })
                        <span class="input-group-addon">
                            <i class="fa fa-cale    ndar">

                            </i>
                        </span>
                    </div>
                </div>
                <div class="col-md-3 col-xs-12 divboxmd">
                    <label class="col-sm-12 control-label no-padding-right">Nhóm khách hàng</label>


                    @Html.DropDownList("customerGroup", new SelectList(ViewBag.GroupCustomers, "ItemValue", "ItemText", ViewBag.CustomerId), new { @class = "form-control chosen-select" })


                </div>
            </div>
            <div class="row">
                <div class="col-md-3 col-xs-12 divboxmd">
                    <label class="col-sm-12 control-label no-padding-right">Nhóm thẻ</label>
                    <div>

                        @Html.Action("DroplistMultiSelectTemplate1", "CommonUse", new
                   {
                       _dt = ViewBag.CardGroupDT,
                       itemValue = "ItemValue",
                       itemText = "ItemText",
                       selectedValues = ViewBag.CardGroupid,
                       Modelname = "ddlcard"
                   })
                        @Html.Hidden("cardgroup")


                    </div>

                </div>
                <div class="col-md-3 col-xs-12 divboxmd">
                    <label class="line-height-250">
                        <input type="radio" name="isCheckByTime" value="0" class="ace" @string.Format("'{0}'", checkbytype.Equals("0") ? "checked" : "") />
                        <span class="lbl">Không lọc theo ngày</span>
                    </label>
                </div>
                <div class="col-md-3 col-xs-12 divboxmd">
                    <label class="line-height-250">
                        <input type="radio" name="isCheckByTime" value="1" class="ace" @string.Format("{0}", checkbytype.Equals("1") ? "checked" : "") />
                        <span class="lbl"> Lọc theo ngày tạo</span>
                    </label>
                </div>
                <div class="col-md-3 col-xs-12 divboxmd">
                    <label class="line-height-250">
                        <input type="radio" name="isCheckByTime" value="2" class="ace" @string.Format("{0}", checkbytype.Equals("2") ? "checked" : "") />
                        <span class="lbl">Lọc theo ngày hết hạn</span>
                    </label>
                </div>
            </div>
            <div><br /></div>
            <div class="row">
                <div class="col-md-3 col-xs-12 left">
                    @Html.Action("Actions", "Home", new { ActionName = "Search", Controller = controller })
                </div>

            </div>
        }
    </div>
</div>

<div class="row">
    <div class="col-xs-12">
        <div class="pull-right">
            <a href="@Url.Action("Create" , controller, new{ key = ViewBag.KeyWord,cardGroup = ViewBag.CardGroupid,customerGroup = ViewBag.CustomerId ,isCheckByTime = ViewBag.isCheckByTimeValue,fromdate =  ViewBag.fromdateValue,todate=ViewBag.todateValue}) " class="btn btn-primary btn-sm btn-white btn-bold">
                <i class="fa fa-plus">
                    Thêm mới
                </i>
            </a>
        </div>
    </div>

</div>
<div class="hr  hr-18 dotted hr-24"></div>
<div class="row">
    <div class="col-xs-12">
        <div class="divScroll">
            <table class="table  table-bordered table-hover">
                <thead>
                    <tr class="headerSort">
                        @*<th class="center">STT </th>*@
                        <th class="center" idata="CardNo" >CardNo <i class=""></i> </th>
                        <th class="center" idata  ="CardNumber"   >Mã Thẻ <i class=""></i> </th>
                        <th class="center">Nhóm Thẻ </th>
                        <th class="center">Biển số </th>
                        @*<th class="text-left">Mã hợp đồng </th>*@
                        <th class="text-left">Ngày hết hạn  </th>
                        <th class="text-left">Số tiền </th>
                        <th class="text-left">Mã khách hàng </th>
                        <th class="text-left"> Khách hàng </th>
                        <th class="text-left">Nhóm khách hàng </th>
                        <th class="text-left">Địa chỉ </th>
                        <th class="text-left" idata="ImportDate">Ngày tạo <i class=""></i> </th>
                        <th class="text-left" idata="IsLock">Trạng thái <i class=""></i></th>
                        <th>Xử lý </th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Data.Any())
                    {
                        foreach (var item in Model.Data)
                        {
                            var obj = listmoney.FirstOrDefault(n => n.CardNumber.Contains(item.CardNumber));
                            <tr>
                                <td class="text-left">@item.CardNo</td>
                                <td class="text-left">@item.CardNumber</td>
                                <td class="text-left">
                                    @item.CardGroupName

                                </td>
                                <td class="text-left">
                                    @if (!string.IsNullOrWhiteSpace(item.Plate1))
                                    {
                                        <span>@item.Plate1</span>
                                    }
                                    @if (!string.IsNullOrWhiteSpace(item.Plate2))
                                    {
                                        <span>@item.Plate2</span>
                                    }
                                    @if (!string.IsNullOrWhiteSpace(item.Plate3))
                                    {
                                        <span>@item.Plate3</span>
                                    }
                                </td>
                                <td class="text-left">
                                    @if (item.ExpireDate != null)
                                    {
                                        var status = Kztek.Web.Core.Functions.FunctionHelper.GetStatusDateByDay(Convert.ToDateTime(item.ExpireDate));
                                        <span>@Html.Raw(status)</span>
                                    }
                                </td>
                              
                                    <td class="text-left">
                                        @if (obj != null && obj.FeeLevel > 0)
                                        {
                                            <span>@obj.FeeLevel.ToString("###,###")</span>
                                        }
                                        else
                                        {
                                            <span>0</span>
                                        }
                                    </td>
                                    <td class="center">@item.CustomerCode</td>
                                    <td class="text-left">
                                        @item.CustomerName
                                    </td>

                                    <td class="text-left">
                                        @item.CustomerGroupName
                                    </td>

                                    <td class="text-left">
                                        @item.CustomerAddress
                                    </td>
                                    <td class="text-left">
                                        @if (item.ImportDate != null)
                                        {
                                            <span> @item.ImportDate.Value.ToString("dd/MM/yyy")</span>
                                        }
                                    </td>
                                    <td class="text-left">
                                        @if (item.IsLock == false)
                                        {
                                            <span class="label label-sm label-success">Đã kích hoạt</span>
                                        }
                                        else
                                        {
                                            <span class="label label-sm label-warning">Chưa kích hoạt</span>
                                        }
                                    </td>
                                    <td class="center">
                                        <a href="@Url.Action("Update" , controller, new{id = item.CardID}) " class="green" title="Cập nhật">
                                            <i class="ace-icon fa fa-pencil bigger-120"></i>
                                        </a>
                                        <a href="javascript:void(0)" class="btnDelete red" title="Xóa" idata="@item.CardID">
                                            <i class="ace-icon fa fa-trash bigger-120"></i>
                                        </a>
                                        <a href="javascript:void(0)" class="btnRemove red" idata="@item.CardID" title="Xóa không điều kiện">
                                            <i class="ace-icon fa fa-remove bigger-120"></i>
                                        </a>
                                    </td>
                                
                            </tr>
                        }

                    }
                </tbody>
            </table>
        </div>
    </div>

    @if (Model.Data.Any())
    {
        <div class="col-xs-12">
            <div class="pull-right">
                @Html.GeneratePagingFooter(Model.TotalPage, Model.PageIndex, Model.PageSize, "pagination", x => Url.Action("Index", "tblCards", new
           {
               page = x,
               key = ViewBag.KeyWord,
               isCheckByTime = ViewBag.isCheckByTimeValue,
               cardGroup = ViewBag.CardGroupid,
               customerGroup = ViewBag.CustomerId,
               columnquery = ViewBag.ColumnQuery,
               desc   =  ViewBag.Desc 

                }))
            </div>
        </div>
    }
</div>
@section scripts {
    <script src="~/Areas/Parking/Scripts/CardController.js"></script>
    <script>
        function OrderColumnTable(columnSort, columnDefault, isDesc, url) {
            columnSort = columnDefault;

            $(".headerSort th").on('click', function () {
                var cmd = $(this);
                var column = cmd.attr('idata');
                cmd.removeClass("blue");
                cmd.find("i").addClass("fa fa-sort")
                if (column != undefined) {
                    cmd.find("i").removeClass();
                    sortColumn(column, columnDefault, isDesc, url);
                    var className = getClass(column, columnDefault, isDesc);
                    cmd.find("i").toggleClass(className);

                    columnSort = column;
                }
            })
            $(".headerSort th").each(function () {
                var cmd = $(this);
                cmd.find("i").addClass("fa fa-sort");
                var column = cmd.attr('idata');
                if (column == columnSort) {
                    $(".headerSort").find("th[idata=" + columnSort + "]").find("i").removeClass();

                    var className = getClass(columnSort, columnDefault, isDesc);

                    $(".headerSort").find("th[idata=" + columnSort + "]").find("i").toggleClass(className);

                    $(".headerSort").find("th[idata=" + columnSort + "]").addClass("blue");
                }
            })  


        }
        function sortColumn(column, defaultColumn, isDesc, firsturl) {

            if (defaultColumn == column) {
                if (isDesc === "False") {
                    isDesc = "True";
                } else {
                    isDesc = "False";
                }
            } else {
                isDesc = "True";
            }

            defaultColumn = column;
            window.location.href = firsturl + "&&columnQuery=" + column + "&&desc=" + isDesc;
        }
        function getClass(column, defaultColumn, isDesc) {

            if (defaultColumn == column) {
                if (isDesc == "True") {
                    return "fa fa-caret-down";
                } else {
                    return "fa fa-caret-up";
                }
            }
            return "";
        }
        
        
        $(document).ready(function () {
            var _str = '@ViewBag.CardGroupid';
            var count = (_str.match(/&#39;/g) || []).length;
            var i;
            for (i = 0; i < count; ++i) {
                _str = _str.replace('&#39;', "'").replace(',','%2C');
            };
            var urlSt = '/Parking/tblCards/Index?key=' + '@ViewBag.KeyWord' + '&page=' + '@Model.PageIndex' + '&cardgroup=' + _str + '&customerGroup=' + '@ViewBag.CustomerId' + '&isCheckByTime=' + '@ViewBag.isCheckByTimeValue' + '&fromdate=' + '@ViewBag.fromdateValue' + '&todate=' + '@ViewBag.todateValue';
            OrderColumnTable("", "@columnValue", "@isDesc", urlSt);

            $('button[name=btnFilter]').click(function () {
                $('#tblCard ').submit();
            });
            $('#ddlcard').change(function () {
                var str = '';
                var cmd = $(this);
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ',';
                });
                $('#cardgroup').val(str);
            });
           
            $('.btnDelete').click(function () {
            var _noti = $('input[name=_noti]').val();
                var cmd = $(this);
                var _id = cmd.attr('idata');
                bootbox.confirm("Bạn chắc có muốn xóa bản ghi này không?", function (result) {
                    if (result) {
                        $.ajax({
                            url: '/Parking/tblCards/Delete',
                            data: { id: _id },
                            dataType: "json",
                            type: "POST",
                            success: function (data) {
                                if (data.isSuccess) {
                                    cmd.parent().parent().parent().fadeOut(1);
                                    toastr.success(data.Message, _noti);
                                } else {
                                    toastr.error(data.Message, _noti);
                                }
                            }
                        })


                    }
                })
            });
            $('.btnRemove').click(function () {
                var _noti = $('input[name=_noti]').val();
                var cmd = $(this);
                var _id = cmd.attr('idata');
                bootbox.confirm("Bạn chắc có muốn xóa bản ghi này không?", function (result) {
                    if (result) {
                        $.ajax({
                            url: '/Parking/tblCards/Remove',
                            data: { id: _id },
                            type: 'json',
                            success: function (data) {
                                if (data.isSuccess) {
                                    cmd.parent().parent().parent().fadeOut();
                                    toastr.success(data.Message, _noti);
                                } else {
                                    toastr.error(data.Message, _noti);
                                }
                            }
                        })


                    }
                })
            });

        })
    </script>

}
