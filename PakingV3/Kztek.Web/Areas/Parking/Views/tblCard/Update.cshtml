@using Kztek.Web.Core.Extensions
@using Kztek.Web.Core.Functions

@model Kztek.Model.Models.tblCardSubmit

@{
    ViewBag.Title = "Update";

    int pn = Convert.ToInt32(ViewBag.PN);

    var DictionaryShare = FunctionHelper.GetLocalizeDictionary("tblCard", "share");
    var Dictionary = FunctionHelper.GetLocalizeDictionary("tblCard", "Update");
    var DictionaryAction = FunctionHelper.GetLocalizeDictionary("Home", "Action");
    var DictionaryNoti = FunctionHelper.GetLocalizeDictionary("Home", "notification");
    var DictionaryCustomer = FunctionHelper.GetLocalizeDictionary("tblCustomer", "Update");
}

@*<div class="page-header">
        <h1>
            Cập nhật thẻ
        </h1>
    </div>*@
<div class="row">
    @if (TempData["Success"] != null)
    {
        <strong style="color:green">@TempData["Success"]</strong>
    }
    <strong style="color:red">@ViewBag.Error</strong>
</div>
<div class="row">
    @using (Html.BeginForm("Update", "tblCard", FormMethod.Post, new { encType = "multipart/form-data", @class = "form-horizontal", @role = "form", id = "frm_PK_Card_Update" }))
    {
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        @Html.HiddenFor(n => n.CardID)
        if ((bool)ViewBag.ISVIETTEL == false)
        {
            @Html.HiddenFor(n => n.CardNumber)
        }

        @Html.Hidden("CustomerID", Model.CustomerID)

        @Html.HiddenFor(n => n.OldCardDescription)
        @Html.HiddenFor(n => n.OldCardNo)
        @Html.HiddenFor(n => n.OldCardNumber)
        @Html.HiddenFor(n => n.OldCardGroupID)
        @Html.HiddenFor(n => n.OldAccessLevelID)
        @Html.HiddenFor(n => n.OldDtpDateRegisted)
        @Html.HiddenFor(n => n.OldDtpDateReleased)
        @Html.HiddenFor(n => n.OldDtpDateActive)
        @Html.HiddenFor(n => n.OldCardInActive)
        @Html.HiddenFor(n => n.OldCardIsLost)

        @Html.HiddenFor(n => n.OldCustomerID)
        @Html.HiddenFor(n => n.OldCustomerAddress)
        @Html.HiddenFor(n => n.OldCustomerAvatar)
        @Html.HiddenFor(n => n.OldCustomerCode)
        @Html.HiddenFor(n => n.OldCustomerGroupID)
        @Html.HiddenFor(n => n.OldCustomerIdentify)
        @Html.HiddenFor(n => n.OldCustomerMobile)
        @Html.HiddenFor(n => n.OldCustomerName)
        @Html.HiddenFor(n => n.OldCustomerType)

        @Html.Hidden("page", pn)

        @Html.Hidden("key", (string)ViewBag.keyValue)
        @Html.Hidden("cardgroups", (string)ViewBag.cardgroupsValue)
        @Html.Hidden("customergroups", (string)ViewBag.customergroupsValue)
        @Html.Hidden("active", (string)ViewBag.activeValue)
        @Html.Hidden("fromdate", (string)ViewBag.fromdateValue)
        @Html.Hidden("todate", (string)ViewBag.todateValue)
        @Html.Hidden("isCheckByTime", (string)ViewBag.isCheckByTimeValue)

        <div class="col-xs-12">
            <h3 class="header smaller lighter blue"> @Dictionary["CardInfo"] </h3>
            <div class="tabbable">
                <ul class="nav nav-tabs" id="myTab">
                    <li class="active">
                        <a data-toggle="tab" href="#cardinfo" aria-expanded="true">
                            <i class="green ace-icon fa fa-credit-card bigger-120"></i>
                            @Dictionary["CardPrimary"]
                        </a>
                    </li>
                </ul>
                <div class="tab-content">
                    <div id="cardinfo" class="tab-pane fade active in">
                        <div class="form-group">
                            <label class="col-sm-1 control-label-left no-padding-right"> @Dictionary["CardNo"] <span class="error">*</span></label>
                            <div class="col-sm-2 col-xs-12">
                                @Html.TextBoxFor(n => n.CardNo, new { @class = "form-control" })
                                @Html.ValidationMessageFor(n => n.CardNo, "", new { @class = "text-danger" })
                            </div>
                            <label class="col-sm-1 control-label-left no-padding-right"> @Dictionary["CardNumber"] <span class="error">*</span></label>
                            <div class="col-sm-2 col-xs-12">
                                @if ((bool)ViewBag.ISVIETTEL)
                                {
                                    @Html.TextBoxFor(n => n.CardNumber, new { @class = "form-control", @style = "border-left: 2px solid #e63232;" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(n => n.CardNumber, new { @class = "form-control", @style = "border-left: 2px solid #e63232;", @disabled = "disabled" })
                                }

                                @Html.ValidationMessageFor(n => n.CardNumber, "", new { @class = "text-danger" })
                            </div>
                            @if ((bool)ViewBag.ISMANDARIN1 == false)
                            {
                                <label class="col-sm-1 control-label-left no-padding-right"> </label>
                                <div class="col-sm-2 col-xs-12">
                                    <label class="inline">
                                        @Html.CheckBoxFor(n => n.IsAutoCapture, new { @class = "ace" })
                                        <span class="lbl"> Tự động chụp </span>
                                    </label>
                                </div>
                            }
                        </div>
                        <div class="form-group">
                            <label class="col-sm-1 control-label-left no-padding-right"> @Dictionary["CardGroup"] <span class="error">*</span></label>
                            <div class="col-sm-2 col-xs-12">
                                <div id="boxCardGroup">
                                    @Html.DropDownListFor(n => n.CardGroupID, new SelectList(ViewBag.lcardgroups, "CardGroupID", "CardGroupName"), DictionaryShare["selectCardGrp"], new { @class = "form-control chosen-select" })
                                </div>
                                @Html.ValidationMessageFor(n => n.CardGroupID, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-2 col-xs-12" id="boxCardInfo">
                                <span class="label label-info"></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-1 control-label-left no-padding-right"> @Dictionary["Description"] </label>
                            <div class="col-sm-6 col-xs-12">
                                @Html.TextAreaFor(n => n.CardDescription, new { @class = "form-control" })
                                @Html.ValidationMessageFor(n => n.CardDescription, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-1 control-label-left no-padding-right"> Đơn vị tấn(m3) </label>
                            <div class="col-sm-3 col-xs-12">
                                @Html.TextBoxFor(n => n.DVT, new { @class = "form-control", @type = "number", @min = "0" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-1 control-label-left no-padding-right"> @Dictionary["DateRegisted"] </label>
                            <div class="col-sm-2 col-xs-12">
                                <div class="input-group">
                                    @Html.TextBoxFor(n => n.DtpDateRegisted, new { @class = "form-control daterangpicker" })
                                    <span class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(n => n.DtpDateRegisted, "", new { @class = "text-danger" })
                            </div>

                            <label class="col-sm-1 control-label-left no-padding-right"> @Dictionary["DateReleased"] </label>
                            <div class="col-sm-2 col-xs-12">
                                <div class="input-group">
                                    @Html.TextBoxFor(n => n.DtpDateReleased, new { @class = "form-control daterangpicker" })
                                    <span class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(n => n.DtpDateReleased, "", new { @class = "text-danger" })
                            </div>
                            <label class="col-sm-1 control-label-left no-padding-right"> @Dictionary["DateActive"] </label>
                            <div class="col-sm-2 col-xs-12">
                                <div class="input-group">
                                    @Html.TextBoxFor(n => n.DtpDateActive, new { @class = "form-control daterangpicker", @disabled = "disabled" })
                                    <span class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(n => n.DtpDateActive, "", new { @class = "text-danger" })
                            </div>
                            <label class="col-sm-1 control-label-left no-padding-right"> @Dictionary["DateExpired"] </label>
                            <div class="col-sm-2 col-xs-12">
                                <div class="input-group">
                                    @Html.TextBoxFor(n => n.DtpDateExpired, new { @class = "form-control daterangpicker", @disabled = "disabled" })
                                    <span class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(n => n.DtpDateExpired, "", new { @class = "text-danger" })
                            </div>


                        </div>

                        <div class="form-group">
                            <label class="col-sm-1 control-label-left no-padding-right"> </label>
                            <div class="col-sm-2 col-xs-12">
                                <label class="inline">
                                    @Html.CheckBoxFor(n => n.CardInActive, new { @class = "ace" })
                                    <span class="lbl"> @Dictionary["CardIsLock"] </span>
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xs-12">
            <h3 class="header smaller lighter blue"> @Dictionary["CustomerInfo"] </h3>
            <div class="form-group">
                <label class="col-sm-1 control-label-left no-padding-right"> @Dictionary["CustomerSearch"] </label>
                <div class="col-sm-3 col-xs-12">
                    @Html.TextBox("txtSearchCustomer", "", new { @class = "form-control" })

                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label-left no-padding-right"> @Dictionary["CustomerCode"] <span class="error">*</span></label>
                <div class="col-sm-3 col-xs-12">
                    @Html.TextBoxFor(n => n.CustomerCode, new { @class = "form-control", @style = "border-left: 2px solid #e63232;" })
                    @Html.ValidationMessageFor(n => n.CustomerCode, "", new { @class = "text-danger" })
                </div>
                <label class="col-sm-1 control-label-left no-padding-right"> @Dictionary["CustomerName"] </label>
                <div class="col-sm-3 col-xs-12">
                    @Html.TextBoxFor(n => n.CustomerName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(n => n.CustomerName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label-left no-padding-right"> @Dictionary["CustomerMobile"] </label>
                <div class="col-sm-3 col-xs-12">
                    @Html.TextBoxFor(n => n.CustomerMobile, new { @class = "form-control" })
                    @Html.ValidationMessageFor(n => n.CustomerMobile, "", new { @class = "text-danger" })
                </div>
                <label class="col-sm-1 control-label-left no-padding-right"> @Dictionary["CustomerIdentify"] </label>
                <div class="col-sm-3 col-xs-12">
                    @Html.TextBoxFor(n => n.CustomerIdentify, new { @class = "form-control" })
                    @Html.ValidationMessageFor(n => n.CustomerIdentify, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label-left no-padding-right"> @Dictionary["CustomerAddress"] </label>
                <div class="col-sm-7 col-xs-12">
                    @Html.TextAreaFor(n => n.CustomerAddress, new { @class = "form-control" })
                    @Html.ValidationMessageFor(n => n.CustomerAddress, "", new { @class = "text-danger" })
                </div>
            </div>
           
            <div class="form-group">
                <label class="col-sm-1 control-label-left no-padding-right"> @Dictionary["CustomerGroup"] <span class="error">*</span></label>
                <div class="col-sm-3 col-xs-12">
                    @Html.DropDownListFor(n => n.CustomerGroupID, new SelectList(ViewBag.lcustomergroups, "ItemValue", "ItemText"), new { @class = "form-control chosen-select", @style = "border-left: 2px solid #e63232;" })
                    @Html.ValidationMessageFor(n => n.CustomerGroupID, "", new { @class = "text-danger" })
                </div>
                @if ((bool)ViewBag.IsCompartment)
                {
                    <label class="col-sm-1 control-label-left no-padding-right"> @DictionaryCustomer["Compartment"] </label>
                    <div class="col-sm-3 col-xs-12">
                        @Html.TextBoxFor(n => n.CompartmentId, new { @class = "form-control" })

                    </div>
                }
            </div>
            <div class="form-group">
                <label class="col-sm-1 control-label-left no-padding-right"> @Dictionary["CustomerAvatar"] </label>
                <div class="col-sm-8 col-xs-12">
                    <div id="BoxRenderFile">

                    </div>
                </div>
            </div>
        </div>
        <div class="col-xs-12" id="boxVehicle">
            <h3 class="header smaller lighter blue"> @Dictionary["VehicleInfo"] </h3>
            <div id="boxVehicles" class="form-group">
                <div class="col-sm-6">
                    <table class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <td>@Dictionary["Plate"]</td>
                                <td>@Dictionary["Name"]</td>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>
                                    @Html.TextBoxFor(n => n.Plate1, new { @class = "form-control", @placeholder = Dictionary["PlatePlaceholder"] + "1" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(n => n.VehicleName1, new { @class = "form-control", @placeholder = Dictionary["NamePlaceholder"] + "1" })
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.TextBoxFor(n => n.Plate2, new { @class = "form-control", @placeholder = Dictionary["PlatePlaceholder"] + "2" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(n => n.VehicleName2, new { @class = "form-control", @placeholder = Dictionary["NamePlaceholder"] + "2" })
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.TextBoxFor(n => n.Plate3, new { @class = "form-control", @placeholder = Dictionary["PlatePlaceholder"] + "3" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(n => n.VehicleName3, new { @class = "form-control", @placeholder = Dictionary["NamePlaceholder"] + "3" })
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="ace-settings-container" id="ace-settings-container" style="position: fixed; top: 155px;">
            <div class="btn btn-app btn-xs btn-grey ace-settings-btn open" id="ace-settings-btn">
                <i class="ace-icon fa fa-cog bigger-130"></i>
            </div>

            <div class="ace-settings-box clearfix open" id="ace-settings-box">
                <!-- /.pull-left -->
                <div class="bg-rightbox">
                    <div class="clearfix lineButton">
                        <div class="col-md-12 input-group">
                            <button class="btn btn-info" type="submit">
                                <i class="ace-icon fa fa-check bigger-110"></i>
                                @DictionaryAction["Save"]
                            </button>
                            <button class="btn btn-warning" type="button" onclick="ChangeAnotherCustomer()">
                                <i class="ace-icon fa fa-refresh bigger-110"></i>
                                @DictionaryAction["ChangeCustomer"]
                            </button>
                            <button class="btn btn-success" type="button" onclick="ReturnCardFromCustomer()">
                                <i class="ace-icon fa fa-backward bigger-110"></i>
                                @DictionaryAction["ReturnCard"]
                            </button>
                            @*<button class="btn btn-danger" type="button" onclick="DeleteCard('@Model.CardID.ToString()')">
                                    <i class="ace-icon fa fa-trash bigger-110"></i>
                                    Xóa thẻ
                                </button>*@
                            <button class="btn" type="reset">
                                <i class="ace-icon fa fa-undo bigger-110"></i>
                                @DictionaryAction["Reset"]
                            </button>
                            <a href="@Url.Action("Index", new { key = ViewBag.keyValue, cardgroups = ViewBag.cardgroupsValue, customergroups = ViewBag.customergroupsValue, active = ViewBag.activeValue, fromdate = ViewBag.fromdateValue, todate = ViewBag.todateValue, isCheckByTime = ViewBag.isCheckByTimeValue, selectedId = Model.CardID })" class="btn btn-yellow">
                                <i class="ace-icon fa fa-chevron-circle-left bigger-110"></i>
                                @DictionaryAction["BackToList"]
                            </a>
                        </div>
                    </div>
                </div>
                <!-- /.pull-left -->
            </div><!-- /.ace-settings-box -->
        </div>
    }
</div>
<input type="hidden" name="_changeAnotherCustomer" value="@DictionaryNoti["changeAnotherCustomer"]" />
<input type="hidden" name="_returnCardFromCustomer" value="@DictionaryNoti["returnCardFromCustomer"]" />
@section scripts{
    <script src="~/Areas/Parking/Scripts/CardController.js"></script>
    <script src="~/Scripts/Ext/FileUploadController.js"></script>
    <script>
        $(document).ready(function () {

            //Vị trí upload avatar
            FileUploadController.init("BoxRenderFile", "FileUpload", "", "@Model.CustomerID");

            $("input[id=txtSearchCustomer]").autocomplete({
                source: []
            });

            $("input[id=txtSearchCustomer]").keyup(function () {
                var key = $(this).val();
                PK_CardController.loadDataCustomer(key);
            });

            //$("input[id=txtSearchCustomer]").change(function () {
            //    var code = $(this).val();
            //    PK_CardController.getCustomer(code);
            //});

            $("#CustomerName").change(function () {
                var code = $(this).val();
                var oldcode = $("#OldCustomerName").val();
            });

            $("#frm_PK_Card_Update").submit(function () {
                //var str = "";
                //$("#boxVehicle #boxVehicles table > tbody").find("tr").each(function () {
                //    var plate = $(this).find("input[name=txtVehiclePlate]").val();
                //    var name = $(this).find("input[name=txtVehicleName]").val();
                //    str += plate + "#" + name + ";";
                //});
                //$("#VehiclePlateList").val(str);

                //Xử lý với thẻ phụ
                //var strSubCard = "";
                //$("#cardsub #boxCardSubs table > tbody").find("tr").each(function () {
                //    var cardnumber = $(this).find("input[name=txtCardNumberSub]").val();
                //    strSubCard += cardnumber + ";";
                //});
                //$("#CardSubList").val(strSubCard);
            });

            //$("#FileUpload").change(function () {
            //    var file = $(this).prop("files");
            //    var formdata = new FormData();

            //    for (i = 0; i < file.length; i++) {
            //        //Appending each file to FormData object
            //        formdata.append(file[i].name, file[i]);
            //    }

            //    $.ajax({
            //        url: _prefixParkingDomain + '/tblCard/PreviewImageUpload',
            //        data: formdata,
            //        type: "POST",
            //        contentType: false,
            //        processData: false,
            //        success: function (data) {
            //            $("#imgAvatar").attr("src", "");
            //            $("#imgAvatar").attr("src", data);
            //        }
            //    });
            //});
        });
    </script>

}