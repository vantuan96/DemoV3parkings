@using Kztek.Model.CustomModel
@using Kztek.Web.Core.Extensions
@using Kztek.Web.Attributes
@using Kztek.Web.Core.Functions

@model PageModel<Kztek.Model.Models.ExtendList>
@{
    ViewBag.Title = "Danh sách gia hạn chi tiết";

    string controller = this.ViewContext.RouteData.Values["controller"].ToString();

    var lCustomer = (List<Kztek.Model.Models.tblCustomer>)ViewBag.CustomerList;
    bool isTime = ViewBag.IsFilterByTime;

    var Dictionary = FunctionHelper.GetLocalizeDictionary("ActiveCardList", "Index");
    var DictionaryAction = FunctionHelper.GetLocalizeDictionary("Home", "Action");
    var DictionarySelectCusGrp = FunctionHelper.GetLocalizeDictionary("SelectList", "CustomerGroupID");

}

<div class="page-header">
    <h1>
        @Dictionary["TitleDetail"] (<span>@Model.TotalItem</span>)
    </h1>
</div>

@using (Html.BeginForm("ExtendList", "ActiveCardList", FormMethod.Get, new { id = "frmActiveCardList" }))
{
    <div class="row">

        @Html.Hidden("chkExport", "0")
        <div class="col-md-2 col-xs-12 divboxmd">
            @Dictionary["Keyword"]
            <input type="text" name="key" value="@ViewBag.keyValue" placeholder="@Dictionary["SearchPlaceHolder"]" class="form-control" />
        </div>
        <div class="col-md-3 col-xs-12 divboxmd">
            @Dictionary["FromDate"]
            <div class="input-group">
                @Html.TextBox("fromdate", (string)ViewBag.fromdateValue, new { @class = "form-control daterangtimepicker" })
                <span class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </span>
            </div>
        </div>
        <div class="col-md-3 col-xs-12 divboxmd">
            @Dictionary["ToDate"]
            <div class="input-group">
                @Html.TextBox("todate", (string)ViewBag.todateValue, new { @class = "form-control daterangtimepicker" })
                <span class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </span>
            </div>
        </div>
         <div class="col-md-2 col-xs-12 divboxmd line-height-380">
            <label>
                <input type="radio" name="IsFilterByTime" value="true" class="ace" @string.Format("{0}", isTime ? "checked" : "") )>
                <span class="lbl"> @Dictionary["DateCreate"] </span>
            </label>
        </div>
        <div class="col-md-2 col-xs-12 divboxmd line-height-380">
            <label>
                <input type="radio" name="IsFilterByTime" value="false" class="ace" @string.Format("{0}", isTime ? "" : "checked") )>
                <span class="lbl"> @Dictionary["DatePay"] </span>
            </label>
        </div>
        
    </div>

    <div class="row">
        <div class="col-md-2 col-xs-12 divboxmd">
            @Dictionary["CustomerGroupFilter"]
            @Html.DropDownList("customergroupids", new SelectList(ViewBag.customergroups, "ItemValue", "ItemText", ViewBag.customergroupidsValue), DictionarySelectCusGrp["SlectlistCusGrp"], new { @class = "form-control chosen-select" })
        </div>
        <div class="col-md-2 col-xs-12 divboxmd">
            <div>@Dictionary["CardGroupFilter"]</div>
            <div>
                @Html.Action("DroplistMultiSelectTemplate1", "CommonUse", new { _dt = ViewBag.cardgroups, itemValue = "CardGroupID", itemText = "CardGroupName", selectedValues = ViewBag.cardgroupidsValue, Modelname = "ddlcardgroup", labelName = "-- Lựa chọn --" })
                @Html.Hidden("cardgroupids")
            </div>
        </div>
        <div class="col-md-2 col-xs-12 divboxmd">
            <div>
                @Dictionary["UserFilter"]
            </div>
            <div>
                @Html.Action("DroplistMultiSelectTemplate1", "CommonUse", new { _dt = ViewBag.users, itemValue = "Id", itemText = "Username", selectedValues = ViewBag.usersValue, Modelname = "ddluser", labelName = "-- Lựa chọn --" })
                @Html.Hidden("userids")
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 col-xs-12 divboxmd line-height-450" style="margin-top:14px;">
            @Html.Action("Actions", "Home", new { ActionName = "Search", ControllerName = controller })

            @*@Html.Action("Actions", "Home", new { ActionName = "Export", ControllerName = controller })*@
            <button class="btn btn-primary btn-white btn-bold" type="button" name="btnExport">
                <i class="fa fa-file green" aria-hidden="true"></i>
               Excel
            </button>

            <a href="@Url.Action("ExtendList", controller)" class="btn btn-primary btn-white btn-bold" type="submit">
                <i class="fa fa-refresh green" aria-hidden="true"></i>
                Reset
            </a>

        </div>
    </div>
}

<div class="hr hr-18 dotted hr-24"></div>

<div class="row">
    <div class="col-xs-12">
        <table class="table  table-bordered table-hover">
            <thead>
                <tr class="headerSort">
                    <th class="center"> @Dictionary["Order"] </th>
                    <th class="text-left" idata="CardNo"> @Dictionary["CardNo"] <i class=""></i></th>
                    <th class="text-left" idata="CardNumber"> @Dictionary["CardNumber"] <i class=""></i></th>
                    <th class="text-left"> @Dictionary["CustomerName"] </th>
                    <th class="text-left"> @Dictionary["CustomerGroup"] </th>
                    <th class="text-left"> @Dictionary["Fee"] </th>
                    <th class="text-left"> @Dictionary["User"] </th>
                    <th class="text-left">  @Dictionary["DatePayment"] </th>
                    <th class="text-left"> @Dictionary["DateCreated"] </th>
                    @*<th class="text-left" width="80"> @Dictionary["Action"] </th>*@
                </tr>
            </thead>

            <tbody>
                @if (Model.Data.Any())
                {
                    var count = (Model.PageIndex - 1) * Model.PageSize;
                    foreach (var item in Model.Data)
                    {
                        count++;
                        <tr>
                            <td class="center">@count</td>

                            <td class="text-left">
                                @item.CardNo
                            </td>

                            <td class="text-left">
                                @item.CardNumber
                            </td>

                            <td class="center">
                               @item.CustomerID

                            </td>

                            <td class="center">
                                @item.CustomerGroupID
                            </td>

                            <td class="center">
                                @if (!string.IsNullOrEmpty(item.FeeLevel) && !item.FeeLevel.Equals("0"))
                                {
                                    @Convert.ToInt64(item.FeeLevel).ToString("###,###")
                                }
                                else
                                {
                                    <span>0</span>
                                }
                            </td>

                            <td class="center">
                                @item.UserID
                            </td>
                            <td class="center">
                                @Convert.ToDateTime(item.Date).ToString("dd/MM/yyyy HH:mm")
                            </td>
                            <td class="center">
                                @item.DateCreated.ToString("dd/MM/yyyy HH:mm")
                            </td>
                            @*<td class="center">
                                    @if (CheckAuthorizeAction.CheckActionPemission(controller, "Delete"))
                                    {
                                        <a href="javascript:void(0)" class="btnDelete red" idata="@item.Id" title="Xóa">
                                            <i class="ace-icon fa fa-trash bigger-120"></i>
                                        </a>
                                    }
                                </td>*@
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div><!-- /.span -->

    @if (Model.Data.Any())
    {
        <div class="col-xs-12">
            <div class="pull-right">
                @Html.GeneratePagingFooter(Model.TotalPage, Model.PageIndex, Model.PageSize, "pagination", x => Url.Action("ExtendList", "ActiveCardList", new
           {
               page = x,
               key = ViewBag.keyValue,
               cardgroupids = ViewBag.cardgroupidsValue,
               customergroupids = ViewBag.customergroupidsValue,
               userids = ViewBag.usersValue,
               fromdate = ViewBag.fromdateValue,
               todate = ViewBag.todateValue,
               IsFilterByTime = ViewBag.IsFilterByTime
           }))
            </div>
        </div>
    }
</div><!-- /.row -->
@section scripts{
    <script>
        //function RemoveEventProcess(cardNumber, id) {
        //    if (confirm('Bạn chắc chắn muốn xóa bản ghi này?')) {
        //        $.ajax({
        //            url: _prefixParkingDomain + '/ActiveCardList/DeleteEvent',
        //            data: { id: id, cardnumber: cardNumber },
        //            type: 'json',
        //            //async:false,
        //            success: function (data) {
        //                if (data.isSuccess) {

        //                    toastr.success(data.Message, 'Thông báo');
        //                    window.location.href = _prefixParkingDomain + '/ActiveCardList/Index';
        //                } else {
        //                    toastr.error(data.Message)
        //                }
        //            }
        //        });
        //    }
        //}

        $(document).ready(function () {

            $('.btnDelete').click(function () {
                var cmd = $(this);
                var _id = cmd.attr('idata');

                bootbox.confirm("Bạn chắc chắn muốn xóa bản ghi này?", function (result) {
                    if (result) {
                        $.ajax({
                            url: _prefixParkingDomain + '/ActiveCardList/DeleteEvent',
                            data: { id: _id },
                            type: 'json',
                            //async:false,
                            success: function (data) {
                                if (data.isSuccess) {
                                    cmd.parent().parent().fadeOut();
                                    toastr.success(data.Message, 'Thông báo');
                                } else {
                                    toastr.error(data.Message, 'Thông báo');
                                }
                            }
                        });
                    }
                });
            });

            //Export excel
            $('button[name=btnExport]').click(function () {
                $('#chkExport').val('1');
                $('#frmActiveCardList').submit();
            });

            $('button[name=btnFilter]').click(function () {
                $('#chkExport').val('0'); // ko xuat xxcel
                $('#frmActiveCardList').submit();
            });

            //
            $('#ddlcardgroup').change(function () {
                var str = '';
                var cmd = $(this);
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ',';
                });
                $('#cardgroupids').val(str);
            });


            //
            $('#ddluser').change(function () {
                var str = '';
                var cmd = $(this);
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ',';
                });
                $('#userids').val(str);
            });
        });
    </script>
}

