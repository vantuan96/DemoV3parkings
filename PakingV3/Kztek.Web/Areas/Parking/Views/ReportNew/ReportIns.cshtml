@using Kztek.Model.CustomModel
@using Kztek.Web.Core.Extensions
@using Kztek.Web.Attributes
@using Kztek.Web.Core.Functions
@model  PageModel<Kztek.Model.Models.ReportIn>
@{
    ViewBag.Title = "Xe trong bãi hiện tại";

    var listLane = (List<Kztek.Model.Models.tblLane>)ViewBag.listLane;
    var listGroupCard = (List<SelectListModel2>)ViewBag.CardGroup;

    bool checkTime = Convert.ToBoolean(ViewBag.CheckTime);

    string controller = this.ViewContext.RouteData.Values["controller"].ToString();

}

<div class="page-header">
    <h1>
        @ViewBag.Title
    </h1>
</div>
<div class="row">
    @using (Html.BeginForm("ReportIns", "ReportNew", FormMethod.Get, new { id = "fbtReport" }))
    {
        <div class="col-md-2 col-xs-12 divboxmd">
            <label class="col-sm-12 control-label no-padding-right">Từ Khóa</label>
            <div class="">
                <input type="text" name="key" value="@ViewBag.keyword" class="form-control" placeholder="Tên khách hàng..." />
            </div>

        </div>
        <div class="col-md-3 col-xs-12 divboxmd">
            <label class="col-sm-12 control-label no-padding-right">Từ ngày</label>
            <div class="input-group">
                @Html.TextBox("fromdate", (string)ViewBag.fromdateValue, new { @class = "form-control datepicker" })
                <span class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </span>
            </div>
        </div>
        <div class="col-md-3 col-xs-12 divboxmd">
            <label class="col-sm-12 control-label no-padding-right">Đến ngày</label>
            <div class="input-group">
                @Html.TextBox("todate", (string)ViewBag.todateValue, new { @class = "form-control datepicker" })
                <span class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </span>
            </div>
        </div>

        <div class="col-md-2 col-xs-12 divboxmd">
            <label class="line-height-450">
                @Html.CheckBox("isCheckTime", checkTime, new { @class = "ace" })

                <span class="lbl">  Tìm theo thời gian</span>
            </label>
        </div>
        <div class="col-md-2 col-xs-12 divboxmd">
            <label>Làn</label>
            <div>
                @Html.Action("DroplistMultiSelectTemplate1", "CommonUse", new
                {
                    _dt = ViewBag.LaneDT,
                    itemValue = "LaneID",
                    itemText = "LaneName",
               selectedValues = ViewBag.LaneId,
                    Modelname = "ddllane"
           })
                @Html.Hidden("lane")
            </div>
        </div>
        <div class="col-md-3 col-xs-12 divboxmd">
            <label class="col-sm-12 control-label no-padding-right">Nhóm thẻ</label>
            <div>
             
                @Html.Action("DroplistMultiSelectTemplate1", "CommonUse", new
           {
               _dt = ViewBag.CardGroupDT,
               itemValue = "ItemValue",
               itemText = "ItemText",
               selectedValues = ViewBag.CardsGroups,            
               Modelname = "ddlcard"
           })
                @Html.Hidden("cardgroups")


            </div>

        </div>

        <div class="col-md-2 col-xs-12 divboxmd">
            <label class="col-sm-12 control-label no-padding-right">Nhóm khách hàng</label>

            @Html.DropDownList("groupCustomer", new SelectList(ViewBag.GroupCustomers, "ItemValue", "ItemText", ViewBag.GroupCustomerID),"---Select group customer---", new { @class = "form-control chosen-select" })
        </div>


       
        <div class="col-md-12 col-xs-12 divboxmd">
            @Html.Action("Actions", "Home", new { ActionName = "Search", ControllerName = "controller" })
        </div>
    }
</div>



<div class="hr hr-18 dotted hr-24"></div>
<div class="row">
    <div class="col-xs-12">
        <div class="divScroll">
            <table class="table  table-bordered table-hover">
                <thead>
                    <tr class="headerSort">
                        <th class="center">STT</th>
                        <th class="center hidden-480">CardNo</th>
                        <th class="center">Thời gian vào</th>
                        <th class="center hidden-480">Mã thẻ</th>
                        <th class="center hidden-480">Khách hàng</th>
                        <th class="center hidden-480">Ảnh</th>
                        <th class="center hidden-480">Làn vào</th>
                        <th class="center hidden-480">Nhóm thẻ</th>
                        <th class="center hidden-480">Giám sát vào </th>


                    </tr>
                </thead>
                <tbody>
                    @if (Model.Data.Any())
                    {
                        var count = (Model.PageIndex - 1) * Model.PageSize;
                        foreach (var item in Model.Data)
                        {
                            count++;
                            <tr>


                                <td class="">
                                    @item.RowNumber
                                </td>
                                <td class="text-left hidden-480">@item.CardNo</td>
                                <td>
                                    @if (item.DateTimeIn != null)
                                    {
                                        @Convert.ToDateTime(item.DateTimeIn).ToString("dd/MM/yyy HH:mm:ss")
                                    }
                                </td>

                                <td class="text-left hidden-480">@item.CardNumber</td>
                                <td class="text-left hidden-480">@item.CustomerName</td>
                                <td class="center">
                                    <div class="ace-thumbnails clearfix">
                                        @if (!string.IsNullOrWhiteSpace(item.PicIn1))
                                        {
                                            @Html.Action("ImageFTP", new { filename = item.PicIn1, description = "Ảnh", type = "INOUT" })
                                        }
                                    </div>
                                </td>
                                <td>
                                    @{
                                        var objlane = listLane != null ? listLane.FirstOrDefault(n => n.LaneID.ToString().Equals(item.LaneIDIn)) : null;
                                        if (objlane != null)
                                        {
                                            <span>@objlane.LaneName</span>
                                        }
                                    }
                                </td>
                                <td>
                                    @{
                                        var objGroupCard = listGroupCard != null ? listGroupCard.FirstOrDefault(n => n.ItemValue.ToString().Equals(item.CardGroupID)) : null;
                                        if (objGroupCard != null)
                                        {
                                            <span>@objGroupCard.ItemText</span>
                                        }

                                    }



                                </td>



                                <td>@item.UserIDIn</td>

                            </tr>

                        }
                    }


                </tbody>
            </table>
        </div>

    </div>

    @if (Model.Data.Any())
    {
        <div class="col-xs-12">
            <div class="pull-right">
                @Html.GeneratePagingFooter(Model.TotalPage, Model.PageIndex, Model.PageSize, "pagination", x => Url.Action("ReportIns", "ReportNew", new
           {
               page = x,
               key = ViewBag.KeyWord,
               fromdate = ViewBag.fromdateValue,
               todate = ViewBag.todateValue,
               datefrompicker = ViewBag.DateFromPickerValue,
               lane = ViewBag.LaneId,
               isCheckTime = ViewBag.CheckTime,
               cardgroups = ViewBag.CardsGroups,
               groupCustomer = ViewBag.GroupCustomerID

           }))
            </div>
        </div>
    }
</div>

@section scripts{

    <script>
        $(document).ready(function () {
            $('button[name=btnFilter]').click(function () {
                $('#fbtReport').submit();
            });


            $("#ddllane").change(function () {

                var str = '';
                var cmd = $(this);
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ',';
                });
                $("#lane").val(str);
            });


            $('#ddlcard').change(function () {
                var str = '';
                var cmd = $(this);
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ',';
                });
                $('#cardgroups').val(str);
            });
        })
    </script>
}


