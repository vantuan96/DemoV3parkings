@using Kztek.Model.CustomModel
@using Kztek.Web.Core.Extensions
@using Kztek.Web.Core.Helpers
@using Kztek.Web.Attributes

@model List<Kztek.Model.Models.ReportDetailMoneyCardDay>

@{
    ViewBag.Title = "Chi tiết thu tiền thẻ lượt";

    string controller = this.ViewContext.RouteData.Values["controller"].ToString();

    var listLane = (List<Kztek.Model.Models.tblLane>)ViewBag.Lanes;

    var listcardGroup = (List<Kztek.Model.Models.tblCardGroup>)ViewBag.CardGroups;

    var listuser = (List<Kztek.Model.Models.User>)ViewBag.Users;

    var user = Kztek.Web.Core.Functions.GetCurrentUser.GetUser();

    string money = Convert.ToDouble((double)ViewBag.totalMoney).ToString("###,###");
}
<button type="button" id="btnAddCamera" onclick="printDiv('Print')" class="btn btn-info btn-sm">
    <i class="fa fa-print"></i>
    Print
</button>
<div class="hr hr-18 dotted hr-24"></div>
<div id="Print">
    <div class="row">
        <div class="col-xs-12">
            <table class="table">
                <tr style="height:10px;border-style:hidden;">
                    <td>
                        <h2 style="font-family: Arial;text-align:center;">Chi tiết thu tiền thẻ lượt</h2>
                        <div id="div_information" style="margin: 10px auto; font-family: Arial;text-align:center;" runat="server">
                            Từ ngày <strong>@ViewBag.fromdateValue</strong> đến ngày <strong>@ViewBag.todateValue</strong>
                        </div>
                    </td>
                </tr>
            </table>
        </div>
    </div>

    <div class="row">
        <div class="col-xs-12">
            <table class="table  table-bordered table-hover">
                <thead>
                    <tr class="headerSort">
                        <th class="center">STT</th>
                        <th class="center" idata="Card"> CardNo <i class=""></i></th>
                        <th class="center">Mã thẻ</th>
                        <th class="center">Biển số</th>
                        <th class="center">TG vào</th>
                        <th class="center">TG ra</th>
                        <th class="center hidden-480" idata="CardGroup">Nhóm thẻ <i class=""></i></th>
                        <th class="center hidden-480" idata="Customer">Khách hàng <i class=""></i></th>
                        <th class="center hidden-480">Làn vào</th>
                        <th class="center hidden-480">Làn ra</th>
                        <th class="center">GS vào</th>
                        <th class="center">GS ra</th>
                        <th class="center">Số tiền(VNĐ)</th>
                        <th class="center hidden-480">Tổng TG</th>
                        <th class="center hidden-480">Voucher</th>
                    </tr>
                </thead>

                <tbody>
                    @if (Model.Any() && Model.Count > 1)
                    {
                        var count = 0;
                        foreach (var item in Model)
                        {
                            count++;
                            <tr>
                                <td class="center">@count</td>

                                <td class="center">
                                    @item.CardNo
                                </td>

                                <td class="center">
                                    @item.CardNumber
                                </td>
                                <td class="center">
                                    @item.Plate
                                </td>
                                <td class="center">
                                    @if (!string.IsNullOrEmpty(item.DateTimeIn) && Convert.ToDateTime(item.DateTimeIn) > DateTime.MinValue)
                                    {
                                        @Convert.ToDateTime(item.DateTimeIn).ToString("dd/MM/yyy HH:mm:ss")
                                    }

                                </td>
                                <td class="center">
                                    @if (!string.IsNullOrEmpty(item.DateTimeOut) && Convert.ToDateTime(item.DateTimeOut) > DateTime.MinValue)
                                    {
                                        @Convert.ToDateTime(item.DateTimeOut).ToString("dd/MM/yyy HH:mm:ss")
                                    }

                                </td>
                                <td class="text-left hidden-480">
                                    @{
                                        var objcardGroup = listcardGroup != null ? listcardGroup.FirstOrDefault(n => n.CardGroupID.ToString().Equals(item.CardGroupID)) : null;

                                        if (objcardGroup != null)
                                        {
                                            <span>@objcardGroup.CardGroupName</span>
                                        }
                                    }
                                </td>
                                <td class="text-left hidden-480">
                                    @item.CustomerName
                                </td>
                                <td class="hidden-480">
                                    @{
                                        var objLane = listLane != null ? listLane.FirstOrDefault(n => n.LaneID.ToString().Equals(item.LaneIDIn)) : null;

                                        if (objLane != null)
                                        {
                                            <span>@objLane.LaneName</span>
                                        }
                                    }
                                </td>
                                <td class="hidden-480">
                                    @{
                                        var objLaneout = listLane != null ? listLane.FirstOrDefault(n => n.LaneID.ToString().Equals(item.LaneIDOut)) : null;

                                        if (objLaneout != null)
                                        {
                                            <span>@objLaneout.LaneName</span>
                                        }
                                    }
                                </td>
                                <td>
                                    @{
                                        var objuser = listuser != null ? listuser.FirstOrDefault(n => n.Id.ToString().Equals(item.UserIDIn)) : null;

                                        if (objuser != null)
                                        {
                                            <span>@objuser.Username</span>
                                        }
                                    }
                                </td>
                                <td>
                                    @{
                                        var objuserout = listuser != null ? listuser.FirstOrDefault(n => n.Id.ToString().Equals(item.UserIDOut)) : null;

                                        if (objuserout != null)
                                        {
                                            <span>@objuserout.Username</span>
                                        }
                                    }
                                </td>
                                <td class="center">
                                    @if (!string.IsNullOrEmpty(item.Moneys))
                                    {
                                        @item.Moneys.FormatMoney()
                                    }

                                </td>
                                <td class="center hidden-480">
                                    @if (!string.IsNullOrEmpty(item.DateTimeIn) && Convert.ToDateTime(item.DateTimeIn) > DateTime.MinValue && !string.IsNullOrEmpty(item.DateTimeOut) && Convert.ToDateTime(item.DateTimeOut) > DateTime.MinValue)
                                    {
                                        <span>@StringUtil.CalculateTimeDiff(item.DateTimeIn, item.DateTimeOut)</span>
                                    }

                                </td>
                                <td class="center hidden-480">
                                    @item.Voucher
                                </td>

                            </tr>

                        }
                    }
                </tbody>


            </table>
        </div><!-- /.span -->

    </div><!-- /.row -->
</div>

@section scripts{
    <script src="~/Areas/Parking/Scripts/PrintFunction.js"></script>
}
