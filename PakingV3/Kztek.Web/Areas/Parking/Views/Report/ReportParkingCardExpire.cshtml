@using Kztek.Model.CustomModel
@using Kztek.Web.Core.Extensions
@using Kztek.Web.Core.Helpers
@using Kztek.Web.Attributes
@using Kztek.Web.Core.Functions

@model PageModel<Kztek.Model.Models.ReportCardExpire>

@{
    ViewBag.Title = "ReportDetailMoneyCardDay";

    var listcardGroup = (List<Kztek.Model.Models.tblCardGroup>)ViewBag.CardGroups;

    var user = Kztek.Web.Core.Functions.GetCurrentUser.GetUser();

    string totalMoney = ViewBag.TotalMoney.ToString();

    var Dictionary = FunctionHelper.GetLocalizeDictionary("report", "ReportCardExpire");
    var DictionarySearch = FunctionHelper.GetLocalizeDictionary("report", "reportSearch");
    var DictionaryAction = FunctionHelper.GetLocalizeDictionary("Home", "Action");
}

<div class="page-header">
    <h1>
        @Dictionary["title"] (<span>@Model.TotalItem</span>)
    </h1>
</div>


    @using (Html.BeginForm("ReportParkingCardExpire", "Report", FormMethod.Get, new { id = "frmReportCardExpire" }))
    {
        @Html.Hidden("chkExport", "0")
    <div class="row">
        <div class="col-md-2 col-xs-12 divboxmd">
            @DictionarySearch["keyWord"]:
            <input type="text" name="key" value="@ViewBag.KeyWord" placeholder=" @DictionarySearch["keywordPlaceholder"]" class="form-control" />
        </div>

        <div class="col-md-3 col-xs-12 divboxmd">
            @DictionarySearch["chooseDate"]:
            <div class="input-group">
                @Html.TextBox("fromdate", (string)ViewBag.fromdateValue, new { @class = "form-control datepicker" })
                <span class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </span>
            </div>
        </div>

        @*<div class="col-md-3 col-xs-12 divboxmd">
            Đến ngày:
            <div class="input-group">
                @Html.TextBox("todate", (string)ViewBag.todateValue, new { @class = "form-control datepicker" })
                <span class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </span>
            </div>
        </div>*@

        <div class="col-md-3 col-xs-12 divboxmd line-height-380">
            <label>
                <input type="radio" name="IsAlmostExpired" value="0" class="ace" @string.Format("{0}", (string)ViewBag.IsAlmostExpiredValue == "0" ? "checked" : "") )>
                <span class="lbl"> @DictionarySearch["cardIsAboutExpire"]</span>
            </label>
        </div>
        <div class="col-md-2 col-xs-12 divboxmd line-height-380">
            <label>
                <input type="radio" name="IsAlmostExpired" value="1" class="ace" @string.Format("{0}", (string)ViewBag.IsAlmostExpiredValue == "0" ? "" : "checked") )>
                <span class="lbl"> @DictionarySearch["expiredCard"] </span>
            </label>
        </div>

        <div class="col-md-3 col-xs-12 divboxmd">
            <div class="control-label">
                @DictionarySearch["cardGroup"]:
            </div>
            <div>
                @Html.Action("DroplistMultiSelectTemplate1", "CommonUse", new { _dt = ViewBag.CardGroupDT, itemValue = "CardGroupID", itemText = "CardGroupName", selectedValues = ViewBag.CardGroupId, Modelname = "ddlcardgroup", labelName = "-- Lựa chọn --" })
                @Html.Hidden("cardgroup")
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 col-xs-12 divboxmd">

            @Html.Action("Actions", "Home", new { ActionName = "Search", ControllerName = "ReportParkingCardExpire" })

            @Html.Action("Actions", "Home", new { ActionName = "Export", ControllerName = "ReportParkingCardExpire" })

            @Html.Action("Actions", "Home", new { ActionName = "Index", ControllerName = "ReportParkingCardExpire" })

        </div>
    </div>


    
    }


<div class="hr hr-18 dotted hr-24"></div>

<div class="row">
    <div class="col-xs-12">
        <table class="table  table-bordered table-hover">
            <thead>
                <tr class="headerSort">
                    <th class="center">@Dictionary["stt"]</th>
                    <th class="text-left" idata="Card">@Dictionary["cardNo"]<i class=""></i></th>
                    <th class="text-left">@Dictionary["codeCard"]</th>
                    <th class="text-left">@Dictionary["licensePlate"]</th>
                    <th class="text-left">@Dictionary["expirationDate"]</th>
                    <th class="text-left hidden-480" idata="CardGroup">@Dictionary["cardGroup"]<i class=""></i></th>
                    <th class="text-left hidden-480">@Dictionary["customerCode"] <i class=""></i></th>
                    <th class="text-left hidden-480" idata="Customer">@Dictionary["customer"] <i class=""></i></th>
                    <th class="text-left hidden-480">@Dictionary["add"]</th>
                    <th class="text-left hidden-480">@Dictionary["phone"]</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Data.Any())
                {
                    var count = (Model.PageIndex - 1) * Model.PageSize;
                    foreach (var item in Model.Data)
                    {
                        count++;
                        <tr>
                            <td class="text-center">
                                @item.RowNumber
                            </td>
                            <td>
                                @item.CardNo
                            </td>
                            <td>
                                @item.CardNumber
                            </td>
                            <td>
                                @item.Plate
                            </td>
                            <td>
                                @Convert.ToDateTime(item.ExpireDate).ToString("dd/MM/yyy")
                            </td>
                            <td>
                                @item.CardGroupName
                            </td>
                            <td>
                                @item.CustomerCode
                            </td>
                            <td>
                                @item.CustomerName
                            </td>
                            <td>
                                @item.Address
                            </td>
                            <td>
                                @item.Mobile
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
    @if (Model.Data.Any())
    {
        <div class="col-xs-12">
            <div class="pull-right">
                @Html.GeneratePagingFooter(Model.TotalPage, Model.PageIndex, Model.PageSize, "pagination", x => Url.Action("ReportParkingCardExpire", "Report", new
           {
               page = x,
               key = ViewBag.KeyWord,
               cardgroup = ViewBag.CardGroupId,
               datefrompicker = ViewBag.DateFromPickerValue,
               fromdate = ViewBag.fromdateValue,
               IsAlmostExpired = ViewBag.IsAlmostExpiredValue
           }))
            </div>
        </div>
    }
</div>

@section scripts{
    <script>
        $(document).ready(function () {
            $('#ddlcardgroup').change(function () {
                var str = '';
                var cmd = $(this);
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ',';
                });
                $('#cardgroup').val(str);
            });

            //Export excel
            $('button[name=btnExport]').click(function () {
                $('#chkExport').val('1');
                $('#frmReportCardExpire').submit();
            });

            $('button[name=btnFilter]').click(function () {
                $('#chkExport').val('0'); // ko xuat xxcel
                $('#frmReportCardExpire').submit();
            });

            //Xóa 1 bản ghi
            $('.btnDelete').click(function () {
                var cmd = $(this);
                var _id = cmd.attr('idata');
                if (confirm('Bạn chắc chắn muốn xóa bản ghi này?')) {
                    $.ajax({
                        url: _prefixParkingDomain + '/Report/DeleteEventIn',
                        data: { id: _id },
                        type: 'json',
                        //async:false,
                        success: function (data) {
                            if (data.Success) {
                                cmd.parent().parent().fadeOut();
                                toastr.success(data.Message)
                            } else {
                                toastr.error(data.Message)
                            }
                        }
                    });
                }
            });

            $("#nav-customer-input").focus(function () {
                this.select();
            });
            $("#nav-customer-input").change(function () {
                if ($(this).val() == '') {
                    $('#txtCustomerID').val('');
                }
            });
            $("#nav-customer-input").autocomplete({
                source: function (request, response) {
                    var itemnamecodes = new Array();
                    $.ajax({
                        url: '/Report/GetCustomerByAutoComplete',
                        data: { name: request.term },
                        type: 'json',
                        success: function (result) {
                            //debugger;
                            for (var i = 0; i < result.length; i++) {
                                //alert(result.d[i].Text + '-' + result.d[i].Value);
                                itemnamecodes[i] = { label: result[i].CustomerName, Id: result[i].CustomerID, code: result[i].CustomerCode };
                            }
                            response(itemnamecodes);
                        },
                        error: function (result) {
                            //debugger;
                            alert(result);
                        }
                    });
                },
                minLength: 1,
                select: function (event, ui) {
                    //debugger;
                    $('#txtCustomerID').val(ui.item.Id);
                },
                open: function () {
                    $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
                },
                close: function () {
                    $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
                }
            });
        });
    </script>
}