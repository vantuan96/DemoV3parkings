@using Kztek.Model.CustomModel
@using Kztek.Web.Core.Extensions
@using Kztek.Web.Attributes
@using Kztek.Web.Core.Functions

@model PageModel<Kztek.Model.Models.ReportAlarm>

@{
    ViewBag.Title = "Sự kiện cảnh báo";

    var lstCode = (List<SelectListModel>)ViewBag.Alarms;
    var lstLane = (IEnumerable<Kztek.Model.Models.tblLane>)ViewBag.Lanes;
    var lstUser = (IEnumerable<Kztek.Model.Models.User>)ViewBag.Users;

    var Dictionary = FunctionHelper.GetLocalizeDictionary("report", "ReportAlarm");
    var Dictionary2 = FunctionHelper.GetLocalizeDictionary("report", "reportIn");
    var DictionarySearch = FunctionHelper.GetLocalizeDictionary("report", "reportSearch");
    var DictionaryAction = FunctionHelper.GetLocalizeDictionary("Home", "Action");
}

<div class="page-header">
    <h1>
       @Dictionary["title"] (<span>@Model.TotalItem</span>)
    </h1>
</div>

<div class="row">
    @using (Html.BeginForm("ReportAlarm", "Report", FormMethod.Get, new { id = "frmReportAlarm" }))
    {
        @Html.Hidden("chkExport", "0")
        <div class="col-md-3 col-xs-12 divboxmd">
            @DictionarySearch["keyWord"]:
            <input type="text" name="key" value="@ViewBag.keyValue" placeholder="@Dictionary["keywordPlaceholder"]" class="form-control" />
        </div>
        <div class="col-md-3 col-xs-12 divboxmd">
           @DictionarySearch["fromDate"]:
            <div class="input-group">
                @Html.TextBox("fromdate", (string)ViewBag.fromdateValue, new { @class = "form-control datepicker" })
                <span class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </span>
            </div>
        </div>
        <div class="col-md-3 col-xs-12 divboxmd">
           @DictionarySearch["toDate"]:
            <div class="input-group">
                @Html.TextBox("todate", (string)ViewBag.todateValue, new { @class = "form-control datepicker" })
                <span class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </span>
            </div>
        </div>

        <div class="col-md-3 col-xs-12 divboxmd">
           @DictionarySearch["action"]:
            @Html.DropDownList("alarmcode", new SelectList(ViewBag.Alarms, "ItemValue", "ItemText", ViewBag.alarmcodeValue), DictionarySearch["select"], new { @class = "form-control" })
        </div>

        <div class="col-md-2 col-xs-12 divboxmd">
            <div class="control-label">
                @DictionarySearch["lane"]
            </div>
            <div>
                @Html.Action("DroplistMultiSelectTemplate1", "CommonUse", new { _dt = ViewBag.LaneDT, itemValue = "LaneID", itemText = "LaneName", selectedValues = ViewBag.laneValue, Modelname = "ddllane", labelName = "-- Lựa chọn --" })
                @Html.Hidden("lane")
            </div>
        </div>
        <div class="col-md-2 col-xs-12 divboxmd">
            <div class="control-label">
                @DictionarySearch["user"]:
            </div>
            <div>
                @Html.Action("DroplistMultiSelectTemplate1", "CommonUse", new { _dt = ViewBag.UserDT, itemValue = "Id", itemText = "Username", selectedValues = ViewBag.userValue, Modelname = "ddluser", labelName = "-- Lựa chọn --" })
                @Html.Hidden("user")
            </div>
        </div>

        <div class="col-md-12 col-lg-12 col-xs-12 divboxmd">
            @Html.Action("Actions", "Home", new { ActionName = "Search", ControllerName = "ReportAlarm" })

            @Html.Action("Actions", "Home", new { ActionName = "Export", ControllerName = "ReportAlarm" })

            @Html.Action("Actions", "Home", new { ActionName = "Index", ControllerName = "ReportAlarm" })
        </div>
    }
</div>

<div class="hr hr-18 dotted hr-24"></div>

<div class="row">
    <div class="col-xs-12">
        <table class="table  table-bordered table-hover">
            <thead>
                <tr>
                    <th class="center">@Dictionary["stt"]</th>
                    <th class="text-left">@Dictionary["time"]</th>
                    <th class="text-left"> @Dictionary2["cardNo"] <i class=""></i></th>
                    <th class="text-left"> @Dictionary["cardCode"] </th>
                    <th class="text-left"> @Dictionary["licensePlate"] </th>
                    <th class="text-left"> @Dictionary["image"] </th>
                    <th class="text-left"> @Dictionary["warning"] </th>
                    <th class="text-left"> @Dictionary["lane"] </th>
                    <th class="text-left"> @Dictionary["monitoring"]</th>
                </tr>
            </thead>

            <tbody>
                @if (Model.Data.Any())
                {
                    var count = (Model.PageIndex - 1) * Model.PageSize;
                    foreach (var item in Model.Data)
                    {
                        count++;
                        <tr>
                            <td class="center">@count</td>

                            <td class="text-left">
                                @Convert.ToDateTime(item.Date).ToString("dd/MM/yyyy HH:mm")
                            </td>
                              <td class="text-left">
                                @item.CardNo
                            </td>
                            <td class="text-left">
                                @item.CardNumber
                            </td>

                            <td class="text-left">
                                @item.Plate
                            </td>

                            <td class="center">
                                <div class="ace-thumbnails clearfix" style="display:inline-flex">
                                    @if (!string.IsNullOrWhiteSpace(item.PicDir))
                                    {
                                        //var t1 = @"\\maximus-pc\PIC\01-09-2018\TrungNguyen.jpg";
                                        //var t2 = @"\\maximus-pc\PICRA\01-09-2018\TrungNguyen.jpg";

                                        @Html.Action("ImageFTP", new { filename = item.PicDir, description = "Ảnh", type = "INOUT" })
                                        @*@Html.Action("ImageFTP", new { filename = t1, description = "Ảnh" })
                                            @Html.Action("ImageFTP", new { filename = t2, description = "Ảnh" })*@
                                    }
                                </div>
                            </td>

                            <td class="text-left">
                                @{
                                    var co = lstCode.FirstOrDefault(n => n.ItemValue.Equals(item.AlarmCode));
                                    if (co != null)
                                    {
                                        <span> @co.ItemText </span>
                                    }
                                }
                            </td>

                            <td class="text-left">
                                @{
                                    var la = lstLane.FirstOrDefault(n => n.LaneID.ToString() == item.LaneID);
                                    if (la != null)
                                    {
                                        <span>@la.LaneName</span>
                                    }
                                }
                            </td>

                            <td class="text-left">
                                @{
                                    var us = lstUser.FirstOrDefault(n => n.Id == item.UserID);
                                    if (us != null)
                                    {
                                        <span>@us.Username</span>
                                    }
                                }
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div><!-- /.span -->
    @if (Model.Data.Any())
    {
        <div class="col-xs-12">
            <div class="pull-right">
                @Html.GeneratePagingFooter(Model.TotalPage, Model.PageIndex, Model.PageSize, "pagination", x => Url.Action("ReportAlarm", "Report", new
           {
               page = x,
               key = ViewBag.keyValue,
               lane = ViewBag.laneValue,
               user = ViewBag.userValue,
               alarmcode = ViewBag.alarmcodeValue,
               fromdate = ViewBag.fromdateValue,
               todate = ViewBag.todateValue
           }))
            </div>
        </div>
    }
</div><!-- /.row -->
@section scripts{
    <script>
        jQuery(function ($) {

            var $overflow = '';
            var colorbox_params = {
                rel: 'colorbox',
                reposition: true,
                scalePhotos: true,
                scrolling: false,
                previous: '<i class="ace-icon fa fa-arrow-left"></i>',
                next: '<i class="ace-icon fa fa-arrow-right"></i>',
                close: '&times;',
                current: '{current} of {total}',
                maxWidth: '100%',
                maxHeight: '100%',
                onOpen: function () {
                    $overflow = document.body.style.overflow;
                    document.body.style.overflow = 'hidden';
                },
                onClosed: function () {
                    document.body.style.overflow = $overflow;
                },
                onComplete: function () {
                    $.colorbox.resize();
                }
            };

            $('.ace-thumbnails [data-rel="colorbox"]').colorbox(colorbox_params);
            $("#cboxLoadingGraphic").html("<i class='ace-icon fa fa-spinner orange fa-spin'></i>");//let's add a custom loading icon


            $(document).one('ajaxloadstart.page', function (e) {
                $('#colorbox, #cboxOverlay').remove();
            });



        })

        $(document).ready(function () {
            //Export excel
            $('button[name=btnExport]').click(function () {
                $('#chkExport').val('1');
                $('#frmReportAlarm').submit();
            });

            $('button[name=btnFilter]').click(function () {
                $('#chkExport').val('0'); // ko xuat xxcel
                $('#frmReportAlarm').submit();
            });

            $('#ddllane').change(function () {
                var str = '';
                var cmd = $(this);
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ',';
                });
                $('#lane').val(str);
            });

            $('#ddluser').change(function () {
                var str = '';
                var cmd = $(this);
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ',';
                });
                $('#user').val(str);
            });
        });
    </script>
}

