@using Kztek.Model.CustomModel
@using Kztek.Web.Core.Extensions
@using Kztek.Web.Attributes

@model PageModel<Kztek.Model.Models.ReportVehicleFreeAllTRANSERCO>

@{
    ViewBag.Title = "ReportVehicleFreeAllTRANSERCO";

    var listLane = (List<Kztek.Model.Models.tblLane>)ViewBag.LaneList;

    var listcardGroup = (List<SelectListModel2>)ViewBag.CardGroups;

    var listuser = (List<Kztek.Model.Models.User>)ViewBag.Users;

    var totalmoney = ViewBag.money;

    var user = Kztek.Web.Core.Functions.GetCurrentUser.GetUser();

    bool isTranserco = Convert.ToBoolean(ViewBag.ISTRANSERCO);
    var listEventSelected = (List<string>)ViewBag.selectedEventValue;

    string path = HttpContext.Current.Request.Url.PathAndQuery;
}

<div class="page-header">
    <h1>
        Lượt ra vào miễn phí (<span>@Model.TotalItem</span>)
    </h1>
</div>

<div class="row">
    @using (Html.BeginForm("ReportVehicleFreeAllTRANSERCO", "Report", FormMethod.Get, new { id = "frmReportIn" }))
    {
        @Html.Hidden("chkExport", "0")
        @*@Html.Hidden("column", column)
            @Html.Hidden("desc", isDescSort)*@
        <div class="col-md-3 col-xs-12 divboxmd">
            Từ khóa:
            <input type="text" name="key" value="@ViewBag.KeyWord" placeholder="Mã thẻ, Biển số..." class="form-control" />
        </div>

        <div class="col-md-3 col-xs-12 divboxmd">
            Từ ngày:
            <div class="input-group">
                @Html.TextBox("fromdate", (string)ViewBag.fromdateValue, new { @class = "form-control datepicker" })
                <span class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </span>
            </div>
        </div>
        <div class="col-md-3 col-xs-12 divboxmd">
            Đến ngày:
            <div class="input-group">
                @Html.TextBox("todate", (string)ViewBag.todateValue, new { @class = "form-control datepicker" })
                <span class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </span>
            </div>
        </div>

        <div class="col-md-2 col-xs-12 divboxmd">
            <div class="control-label">
                Làn:
            </div>
            <div>
                @Html.Action("DroplistMultiSelectTemplate1", "CommonUse", new { _dt = ViewBag.LaneDT, itemValue = "LaneID", itemText = "LaneName", selectedValues = ViewBag.LaneId, Modelname = "ddllane", labelName = "-- Lựa chọn --" })
                @Html.Hidden("lane")
            </div>
        </div>
        <div class="col-md-2 col-xs-12 divboxmd">
            <div class="control-label">
                Người dùng:
            </div>
            <div>
                @Html.Action("DroplistMultiSelectTemplate1", "CommonUse", new { _dt = ViewBag.UserDT, itemValue = "Id", itemText = "Username", selectedValues = ViewBag.UserId, Modelname = "ddluser", labelName = "-- Lựa chọn --" })
                @Html.Hidden("user")
            </div>
        </div>
        <div class="col-md-2 col-xs-12 divboxmd">
            <div class="control-label">
                Nhóm thẻ:
            </div>
            <div>
                @Html.Action("DroplistMultiSelectTemplate1", "CommonUse", new { _dt = ViewBag.CardGroupDT, itemValue = "ItemValue", itemText = "ItemText", selectedValues = ViewBag.CardGroupId, Modelname = "ddlcardgroup", labelName = "-- Lựa chọn --" })
                @Html.Hidden("cardgroup")
            </div>
        </div>

        @*
            <div class="col-md-3 col-xs-12 divboxmd">
                Nhóm khách hàng:
                @Html.DropDownList("customergroup", new SelectList(ViewBag.CustomerGroups, "_id", "Name", ViewBag.CustomerGroupId), new { @class = "form-control chosen-select" })
            </div>*@
        <div class="col-md-12 col-xs-12 divboxmd line-height-450">
            @Html.Action("Actions", "Home", new { ActionName = "Search", ControllerName = "ReportVehicleFreeAllTRANSERCO" })

            @Html.Action("Actions", "Home", new { ActionName = "Export", ControllerName = "ReportVehicleFreeAllTRANSERCO" })

            @if (isTranserco)
            {
                @Html.Action("Actions", "Home", new { ActionName = "Print", ControllerName = "ReportVehicleFreeAllTRANSERCO" })
            }


            @Html.Action("Actions", "Home", new { ActionName = "Index", ControllerName = "ReportVehicleFreeAllTRANSERCO" })



        </div>
    }
</div>
<div class="hr hr-18 dotted hr-24"></div>

<div class="row">
    <div class="col-md-6 col-xs-12">
        <div id="boxCardAction"></div>
    </div>
</div>
<div class="hr hr-18 dotted hr-24"></div>

<div class="row">
    <div class="col-xs-12">
        <div class="divScroll">
            <table class="table  table-bordered table-hover">
                <thead>
                    <tr class="headerSort">
                        <th class="center">
                            <label class="pos-rel">
                                <input type="checkbox" class="ace" id="chkCheckALL" />
                                <span class="lbl"></span>
                            </label>
                        </th>
                        <th class="center">
                            STT
                        </th>
                        <th class="center"> Mã thẻ </th>
                        <th class="center">Biển số</th>
                        <th class="center">Thời gian vào</th>
                        <th class="center">Thời gian ra</th>
                        <th class="center hidden-480" idata="CardGroup">Nhóm thẻ <i class=""></i></th>
                        <th class="center hidden-480" idata="Customer">Khách hàng <i class=""></i></th>
                        <th class="center hidden-480">Làn vào</th>
                        <th class="center hidden-480">Làn ra</th>
                        <th class="center hidden-480">Giám sát vào</th>
                        <th class="center hidden-480">Giám sát ra</th>
                        <th class="center hidden-480">Số tiền(VNĐ)</th>
                        <th class="center hidden-480">Voucher</th>
                        <th class="center hidden-480">Ghi chú</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Data.Any())
                    {
                        var count = (Model.PageIndex - 1) * Model.PageSize;
                        foreach (var item in Model.Data)
                        {
                            count++;
                            <tr>
                                <td class="center">
                                    <label class="pos-rel">
                                        <input type="checkbox" id="chk_@item.Id.ToString()" name="Id" value="@item.Id.ToString()" class="ace chkCheck" @string.Format("{0}", (listEventSelected != null && listEventSelected.Any(n => n.Equals(item.Id))) ? "checked" : "") />
                                        <span class="lbl"></span>
                                    </label>
                                </td>
                                <td>@item.RowNumber</td>
                                <td>
                                    @item.CardNumber
                                </td>
                                <td>
                                    @item.Plate
                                </td>
                                <td align="center">
                                    @Convert.ToDateTime(item.DateTimeIn).ToString("dd/MM/yyy HH:mm:ss")
                                </td>
                                <td align="center">
                                    @Convert.ToDateTime(item.DateTimeOut).ToString("dd/MM/yyy HH:mm:ss")
                                </td>

                                <td>
                                    @{
                                        var objcardGroup = listcardGroup != null ? listcardGroup.FirstOrDefault(n => n.ItemValue.ToString().Equals(item.CardGroupID)) : null;

                                        if (objcardGroup != null)
                                        {
                                            <span>@objcardGroup.ItemText</span>
                                        }
                                    }
                                </td>
                                <td>
                                    @item.CustomerName
                                </td>
                                <td>
                                    @{
                                        var objLane = listLane != null ? listLane.FirstOrDefault(n => n.LaneID.ToString().Equals(item.LaneIDIn)) : null;

                                        if (objLane != null)
                                        {
                                            <span>@objLane.LaneName</span>
                                        }
                                    }
                                </td>
                                <td>
                                    @{
                                        var objLaneout = listLane != null ? listLane.FirstOrDefault(n => n.LaneID.ToString().Equals(item.LaneIDOut)) : null;

                                        if (objLaneout != null)
                                        {
                                            <span>@objLaneout.LaneName</span>
                                        }
                                    }
                                </td>
                                <td>
                                    @{
                                        var objuser = listuser != null ? listuser.FirstOrDefault(n => n.Id.ToString().Equals(item.UserIDIn)) : null;

                                        if (objuser != null)
                                        {
                                            <span>@objuser.Username</span>
                                        }
                                    }
                                </td>
                                <td>
                                    @{
                                        var objuserout = listuser != null ? listuser.FirstOrDefault(n => n.Id.ToString().Equals(item.UserIDOut)) : null;

                                        if (objuserout != null)
                                        {
                                            <span>@objuserout.Username</span>
                                        }
                                    }
                                </td>
                                <td align="center">
                                    @item.Moneys.ToString("###,###")
                                </td>
                                <td>
                                    @item.Voucher
                                </td>
                                <td>
                                    <textarea type="text" id="Note_@item.Id" onkeyup="NoteFree('@item.Id')">@item.Note</textarea>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td></td>
                        <td></td>
                        <td align="center">Tổng số</td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td align="center">@totalmoney</td>
                        <td></td>
                        <td></td>
                    </tr>
                </tfoot>
            </table>
        </div>

    </div>
    @if (Model.Data.Any())
    {
        <div class="col-xs-12">
            <div class="pull-right">
                @Html.GeneratePagingFooter(Model.TotalPage, Model.PageIndex, Model.PageSize, "pagination", x => Url.Action("ReportVehicleFreeAllTRANSERCO", "Report", new
           {
               page = x,
               key = ViewBag.KeyWord,
               cardgroup = ViewBag.CardGroupId,
               datefrompicker = ViewBag.DateFromPickerValue,
               lane = ViewBag.LaneId,
               user = ViewBag.UserId,
               fromdate = ViewBag.fromdateValue,
               todate = ViewBag.todateValue
           }))
            </div>
        </div>
    }
</div>

@section scripts{
    <script>
        jQuery(function ($) {

            var $overflow = '';
            var colorbox_params = {
                rel: 'colorbox',
                reposition: true,
                scalePhotos: true,
                scrolling: false,
                previous: '<i class="ace-icon fa fa-arrow-left"></i>',
                next: '<i class="ace-icon fa fa-arrow-right"></i>',
                close: '&times;',
                current: '{current} of {total}',
                maxWidth: '100%',
                maxHeight: '100%',
                onOpen: function () {
                    $overflow = document.body.style.overflow;
                    document.body.style.overflow = 'hidden';
                },
                onClosed: function () {
                    document.body.style.overflow = $overflow;
                },
                onComplete: function () {
                    $.colorbox.resize();
                }
            };

            $('.ace-thumbnails [data-rel="colorbox"]').colorbox(colorbox_params);
            $("#cboxLoadingGraphic").html("<i class='ace-icon fa fa-spinner orange fa-spin'></i>");//let's add a custom loading icon


            $(document).one('ajaxloadstart.page', function (e) {
                $('#colorbox, #cboxOverlay').remove();
            });



        })

        $(document).ready(function () {
             loadModalSelected('@Model.TotalItem', '@path');
            //Export excel
            $('button[name=btnExport]').click(function () {
                $('#chkExport').val('1');
                $('#frmReportIn').submit();
            });

            $('button[name=btnFilter]').click(function () {
                $('#chkExport').val('0'); // ko xuat xxcel
                $('#frmReportIn').submit();
            });

            $('#ddlcardgroup').change(function () {
                var str = '';
                var cmd = $(this);
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ',';
                });
                $('#cardgroup').val(str);
            });

            $('#ddllane').change(function () {
                var str = '';
                var cmd = $(this);
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ',';
                });
                $('#lane').val(str);
            });

            $('#ddluser').change(function () {
                var str = '';
                var cmd = $(this);
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ',';
                });
                $('#user').val(str);
            });

            //Xóa 1 bản ghi
            $('.btnDelete').click(function () {
                var cmd = $(this);
                var _id = cmd.attr('idata');
                if (confirm('Bạn chắc chắn muốn xóa bản ghi này?')) {
                    $.ajax({
                        url: _prefixParkingDomain + '/Report/DeleteEventIn',
                        data: { id: _id },
                        type: 'json',
                        //async:false,
                        success: function (data) {
                            if (data.Success) {
                                cmd.parent().parent().fadeOut();
                                toastr.success(data.Message)
                            } else {
                                toastr.error(data.Message)
                            }
                        }
                    });
                }
            });


            $('#btnPrintFile').click(function () {
                var _frdate = $('input[name=fromdate]').val();
                var _todate = $('input[name=todate]').val();
                var _key = $('input[name=key]').val();
                var _cardgroup = $('#cardgroup').val();
                var _lane = $('#lane').val();
                var _user = $('#user').val();
                var url = '/Parking/Report/PrintReportVehicleFreeAllTRANSERCO?fromdate=' + _frdate + '&todate=' + _todate + '&key=' + _key + '&cardgroup=' + _cardgroup + '&lane=' + _lane + '&user=' + _user;
                window.open(url, '_blank');
                //$('#chkExport').val('2');
                //$('#frmReportDetailMoneyCardDay').submit();
            });

             $("#chkCheckALL").click(function () {
                if ($(this).is(":checked")) {
                    var choices = [];
                    $('.chkCheck').each(function () {
                        if ($(this).is(":checked")) {
                            var cn = $(this).val();
                            choices.push(cn);
                        }
                    });

                    AddRemoveCardChoice(choices, '@Model.TotalItem', true);

                } else {
                    var unchoices = [];

                    $('.chkCheck').each(function () {
                        if (!$(this).is(":checked")) {
                            var cn = $(this).val();
                            unchoices.push(cn);
                        }
                    });

                    AddRemoveCardChoice(unchoices, '@Model.TotalItem', false);
                }
            });

             $('.chkCheck').click(function () {
                if ($(this).is(":checked")) {
                    var choices = [];
                    var cn = $(this).val();
                    choices.push(cn);
                    AddRemoveCardChoice(choices, '@Model.TotalItem', true);

                } else {
                    var unchoices = [];
                    var cn1 = $(this).val();
                    unchoices.push(cn1);
                    AddRemoveCardChoice(unchoices, '@Model.TotalItem', false);
                }
            });

        });

        function AddRemoveCardChoice(choices, totalItem, isAdd) {
            $.ajax({
                url: _prefixParkingDomain + '/Report/AddOrRemoveOneAllFreeAllSeleted',
                data: { Id: choices, isAdd: isAdd },
                type: 'json',
                async: true,
                success: function (data) {
                    loadModalSelected(totalItem);
                }
            });
        };

        function loadModalSelected(totalItem, url) {
            $.ajax({
                url: _prefixParkingDomain + '/Report/ModalSelectedFreeAll',
                type: 'GET',
                data: {
                    totalItem: totalItem,
                    url: ''
                },
                success: function (response) {
                    $('#boxCardAction').html('');

                    $('#boxCardAction').html(response);
                }
            });
        }

        function RemoveAll() {
            $.ajax({
                url: _prefixParkingDomain + '/Report/RemoveAllFreeAllSeleted',
                data: {},
                type: 'json',
                async: true,
                success: function (data) {
                    //PK_CardController.loadModalButton(totalItem);
                    var _frdate = $('input[name=fromdate]').val();
                    var _todate = $('input[name=todate]').val();
                    var _key = $('input[name=key]').val();
                    var _cardgroup = $('#cardgroup').val();
                    var _lane = $('#lane').val();
                    var _user = $('#user').val();
                    var _url = '/Parking/Report/ReportVehicleFreeAllTRANSERCO?fromdate=' + _frdate + '&todate=' + _todate + '&key=' + _key + '&cardgroup=' + _cardgroup + '&lane=' + _lane + '&user=' + _user;

                    window.location.href = _url;
                }
            });
        }

        function RemoveAllSelected(total, url) {
            RemoveAll();
        }
        function DeleteFree() {
            $.ajax({
                url: _prefixParkingDomain + '/Report/DeleteFree',
                data: {},
                type: 'json',
                async: true,
                success: function (data) {

                    RemoveAll();
                }
            });
        }
        function NoteFree(id) {
            var note = $("#Note_" + id).val();
            $.ajax({
                url: _prefixParkingDomain + '/Report/NoteFree',
                data: {Id:id, Note: note},
                type: 'json',
                async: true,
                success: function (data) {
                    //if (data.isSuccess) {
                    //    toastr.success(data.Message)
                    //} else {
                    //    toastr.error(data.Message)
                    //}
                }
            });
        }
    </script>
}

