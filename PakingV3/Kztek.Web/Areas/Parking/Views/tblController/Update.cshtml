@model Kztek.Model.Models.tblController
@using Kztek.Web.Core.Functions

@{
    ViewBag.Title = "Update";
    //Layout = Kztek.Web.Core.Functions.FunctionHelper.GetLayoutByGroup(ViewBag.Group);

    int pn = Convert.ToInt32(ViewBag.PN);

    var Dictionary = FunctionHelper.GetLocalizeDictionary("tblController", "Update");
    var DictionaryAction = FunctionHelper.GetLocalizeDictionary("Home", "Action");
}

<div class="page-header">
    <h1>
        @Dictionary["Title"]
    </h1>
</div>

<div class="row">
    @if (TempData["Success"] != null)
    {
        <strong style="color:green">@TempData["Success"]</strong>
    }
    <strong style="color:red">@ViewBag.Error</strong>
</div>

<div class="row">
    <div class="col-xs-12">
        @using (Html.BeginForm("Update", "tblController", FormMethod.Post, new { encType = "multipart/form-data", @class = "form-horizontal", @role = "form" }))
        {
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
            @Html.HiddenFor(n => n.ControllerID)

            @Html.Hidden("page", pn)
            @Html.Hidden("key", (string)ViewBag.keyValue)
            @Html.Hidden("pc", (string)ViewBag.pcValue)
            @Html.Hidden("group", (string)ViewBag.groupValue)

            <div class="form-group">
                <label class="col-sm-4 control-label no-padding-right"> @Dictionary["ControllerName"] </label>
                <div class="col-sm-4 col-xs-12">
                    @Html.TextBoxFor(n => n.ControllerName, new { @class = "form-control", @placeholder = Dictionary["ControllerNamePlaceholder"] })
                    @Html.ValidationMessageFor(n => n.ControllerName, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-4 control-label no-padding-right"> @Dictionary["PCName"] </label>
                <div class="col-sm-4 col-xs-12">
                    @Html.DropDownListFor(n => n.PCID, new SelectList(ViewBag.PCs, "PCID", "ComputerName"), Dictionary["PCNamePlaceholder"], new { @class = "form-control chosen-select" })
                    @Html.ValidationMessageFor(n => n.PCID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-4 control-label no-padding-right"> @Dictionary["CommunicationType"] </label>
                <div class="col-sm-4 col-xs-12">
                    @Html.DropDownListFor(n => n.CommunicationType, new SelectList(ViewBag.CommunicationType, "ItemValue", "ItemText"), new { @class = "form-control", @onchange = "ChangeCommunicationType()" })
                    @Html.ValidationMessageFor(n => n.CommunicationType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-4 control-label no-padding-right" id="comport"> Comport / IP</label>
                <div class="col-sm-4 col-xs-12">
                    @Html.TextBoxFor(n => n.Comport, new { @class = "form-control", @placeholder = "" })
                    @Html.ValidationMessageFor(n => n.Comport, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-4 control-label no-padding-right" id="daudrate"> Baudrate/Port</label>
                <div class="col-sm-4 col-xs-12">
                    @Html.TextBoxFor(n => n.Baudrate, new { @class = "form-control", @placeholder = "" })
                    @Html.ValidationMessageFor(n => n.Baudrate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-4 control-label no-padding-right"> @Dictionary["LineTypeID"] </label>
                <div class="col-sm-4 col-xs-12">
                    @Html.DropDownListFor(n => n.LineTypeID, new SelectList(ViewBag.LineType, "ItemValue", "ItemText"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(n => n.LineTypeID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-4 control-label no-padding-right"> @Dictionary["Reader1Type"] </label>
                <div class="col-sm-4 col-xs-12">
                    @Html.DropDownListFor(n => n.Reader1Type, new SelectList(ViewBag.Read, "ItemValue", "ItemText"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(n => n.Reader1Type, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-4 control-label no-padding-right"> @Dictionary["Reader2Type"] </label>
                <div class="col-sm-4 col-xs-12">
                    @Html.DropDownListFor(n => n.Reader2Type, new SelectList(ViewBag.Read, "ItemValue", "ItemText"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(n => n.Reader2Type, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-4 control-label no-padding-right"> @Dictionary["Address"] </label>
                <div class="col-sm-4 col-xs-12">
                    @Html.TextBoxFor(n => n.Address, new { @class = "form-control", @placeholder = "0" })
                    @Html.ValidationMessageFor(n => n.Address, "", new { @class = "text-danger" })
                </div>
            </div>
            @*<div class="form-group">
                    <label class="col-sm-4 control-label no-padding-right"> STT </label>
                    <div class="col-sm-2 col-xs-12">
                        @Html.TextBoxFor(n => n.SortOrder, new { @class = "form-control", @placeholder = "STT" })
                        @Html.ValidationMessageFor(n => n.SortOrder, "", new { @class = "text-danger" })
                    </div>
                </div>*@
            <div class="form-group">
                <label class="col-sm-4 control-label no-padding-right"> @Dictionary["Inactive"]  </label>
                <div class="col-sm-8">
                    <label class="line-height-250">
                        @Html.CheckBoxFor(n => n.Inactive, new { @class = "ace" })
                        <span class="lbl"></span>
                    </label>
                </div>
            </div>

            <div class="ace-settings-container" id="ace-settings-container" style="position: fixed; top: 155px;">
                <div class="btn btn-app btn-xs btn-grey ace-settings-btn open" id="ace-settings-btn">
                    <i class="ace-icon fa fa-cog bigger-130"></i>
                </div>

                <div class="ace-settings-box clearfix open" id="ace-settings-box">
                    <!-- /.pull-left -->
                    <div class="bg-rightbox">
                        <div class="clearfix lineButton">
                            <div class="col-md-12 input-group">
                                <button class="btn btn-success" type="submit" id="Countinue">
                                    <i class="ace-icon fa fa-refresh bigger-110"></i>
                                    @DictionaryAction["Save"] 
                                </button>
                                <button class="btn" type="reset">
                                    <i class="ace-icon fa fa-undo bigger-110"></i>
                                    @DictionaryAction["Refresh"] 
                                </button>
                                <a href="@Url.Action("Index", new { group = ViewBag.groupValue, key = ViewBag.keyValue, pc = ViewBag.pcValue, selectedId = Model.ControllerID.ToString(), page = pn })" class="btn btn-yellow">
                                    <i class="ace-icon fa fa-chevron-circle-left bigger-110"></i>
                                    @DictionaryAction["BackToList"] 
                                </a>
                            </div>
                        </div>
                    </div>
                    <!-- /.pull-left -->
                </div><!-- /.ace-settings-box -->
            </div>
        }
    </div>
</div>

@section scripts{
    <script>
        function ChangeCommunicationType() {
            var type = $("#CommunicationType").val();
            if (type == "0") {
                $("#comport").text("@Dictionary["Comport"]");
                $("#daudrate").text("@Dictionary["Baudrate"]");
                $("#Comport").attr("placeholder", "@Dictionary["ComportPlaceholder"]");
                $("#Baudrate").attr("placeholder", "@Dictionary["BaudratePlaceholder"]");
            } else {
                $("#comport").text("@Dictionary["IP"]");
                $("#daudrate").text("@Dictionary["Port"]");
                $("#Comport").attr("placeholder", "@Dictionary["IPPlaceholder"]");
                $("#Baudrate").attr("placeholder", "@Dictionary["PortPlaceholder"]");
            }
        }

        $("#CommunicationType").val('@Model.CommunicationType');

        $(document).ready(function () {
            ChangeCommunicationType();
        });
    </script>
}