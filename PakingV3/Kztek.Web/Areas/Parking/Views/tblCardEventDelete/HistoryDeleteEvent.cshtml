@using Kztek.Model.CustomModel
@using Kztek.Web.Core.Extensions
@using Kztek.Web.Attributes

@model PageModel<Kztek.Model.Models.ReportInOut108>

@{
    ViewBag.Title = "HistoryDeleteEvent";

    var listLane = (List<Kztek.Model.Models.tblLane>)ViewBag.LaneList;

    var listcardGroup = (List<SelectListModel2>)ViewBag.CardGroups;

    var listuser = (List<Kztek.Model.Models.User>)ViewBag.Users;

    var user = Kztek.Web.Core.Functions.GetCurrentUser.GetUser();

    bool isTimeIn = ViewBag.isFilterByTimeIn;
}

<div class="page-header">
    <h1>
        Lịch sử xóa sự kiện (<span>@Model.TotalItem</span>)
    </h1>
</div>

<div class="row">
    @using (Html.BeginForm("HistoryDeleteEvent", "tblCardEventDelete", FormMethod.Get, new { id = "frmReportInOut" }))
    {
        @Html.Hidden("chkExport", "0")
        @Html.Hidden("pageSize", "20")
        @*@Html.Hidden("column", column)
            @Html.Hidden("desc", isDescSort)*@
        <div class="col-md-2 col-xs-12 divboxmd">
            Từ khóa:
            <input type="text" name="key" value="@ViewBag.KeyWord" placeholder="Mã thẻ, Biển số..." class="form-control" />
        </div>
        <div class="col-md-2 col-xs-12 divboxmd">
            Từ ngày:
            <div class="input-group">
                @Html.TextBox("fromdate", (string)ViewBag.fromdateValue, new { @class = "form-control datepicker" })
                <span class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </span>
            </div>
        </div>
        <div class="col-md-2 col-xs-12 divboxmd">
            Đến ngày:
            <div class="input-group">
                @Html.TextBox("todate", (string)ViewBag.todateValue, new { @class = "form-control datepicker" })
                <span class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </span>
            </div>
        </div>
       
        @*<div class="col-md-3 col-xs-12 divboxmd line-height-380">
                <label>
                    <input type="radio" name="IsFilterByTimeIn" value="true" class="ace" @string.Format("{0}", isTimeIn ? "checked" : "") )>
                    <span class="lbl"> Lọc theo thời gian vào </span>
                </label>
            </div>
            <div class="col-md-3 col-xs-12 divboxmd line-height-380">
                <label>
                    <input type="radio" name="IsFilterByTimeIn" value="false" class="ace" @string.Format("{0}", isTimeIn ? "" : "checked") )>
                    <span class="lbl"> Lọc theo thời gian ra </span>
                </label>
            </div>*@

        <div class="col-xs-12">
            <div class="row">
                <div class="col-md-2 col-xs-12 divboxmd">
                    Nhóm khách hàng:
                    @Html.DropDownList("customergroup", new SelectList(ViewBag.CustomerGroups, "ItemValue", "ItemText", ViewBag.CustomerGroupId), "-- Lựa chọn --", new { @class = "form-control chosen-select" })
                </div>
                <div class="col-md-2 col-xs-12 divboxmd">
                    <div class="control-label">
                        Làn:
                    </div>
                    <div>
                        @Html.Action("DroplistMultiSelectTemplate1", "CommonUse", new { _dt = ViewBag.LaneDT, itemValue = "LaneID", itemText = "LaneName", selectedValues = ViewBag.LaneId, Modelname = "ddllane", labelName = "-- Lựa chọn --" })
                        @Html.Hidden("lane")
                    </div>
                </div>
                <div class="col-md-2 col-xs-12 divboxmd">
                    <div class="control-label">
                        Người dùng:
                    </div>
                    <div>
                        @Html.Action("DroplistMultiSelectTemplate1", "CommonUse", new { _dt = ViewBag.UserDT, itemValue = "Id", itemText = "Username", selectedValues = ViewBag.UserId, Modelname = "ddluser", labelName = "-- Lựa chọn --" })
                        @Html.Hidden("user")
                    </div>
                </div>
                <div class="col-md-2 col-xs-12 divboxmd">
                    <div class="control-label">
                        Nhóm thẻ:
                    </div>
                    <div>
                        @Html.Action("DroplistMultiSelectTemplate1", "CommonUse", new { _dt = ViewBag.CardGroupDT, itemValue = "ItemValue", itemText = "ItemText", selectedValues = ViewBag.CardGroupId, Modelname = "ddlcardgroup", labelName = "-- Lựa chọn --" })
                        @Html.Hidden("cardgroup")
                    </div>
                </div>
            </div>
        </div>


        <div class="col-md-12 col-xs-12 divboxmd">
            @Html.Action("Actions", "Home", new { ActionName = "Search", ControllerName = "HistoryDeleteEvent" })

            <a href="@Url.Action("HistoryDeleteEvent", "tblCardEventDelete")" class="btn btn-primary btn-white btn-bold" type="submit">
                <i class="fa fa-refresh green" aria-hidden="true"></i>
                Reset
            </a>


            @*@Html.Action("PartialExcelColumn", "Report", new { action = "ReportInOut" })
        @Html.Hidden("excelcol")*@

            @Html.Action("Actions", "Home", new { ActionName = "Export", ControllerName = "HistoryDeleteEvent" })
            <a href="@Url.Action("DeleteEvent", "tblCardEventDelete")" class="btn btn-primary btn-white btn-bold" type="submit">
                <i class="fa fa-undo" aria-hidden="true"></i>
                Quay lại xóa sự kiện
            </a>
            @if (Model.TotalItem > 0)
            {
                <a href="javascript:void(0)" class="btn btn-primary btn-white btn-bold" name="btnRestore">
                    <i class="fa fa-check" aria-hidden="true"></i>
                    Khôi phục sự kiện
                </a>
            }

        </div>
    }
</div>

<div class="hr hr-18 dotted hr-24"></div>

<div class="row">
    <div class="col-xs-12">
        <div class="divScroll">
            <table class="table  table-bordered table-hover">
                <thead>
                    <tr class="headerSort">
                        @*<th class="center">
            <label class="pos-rel">
                <input type="checkbox" class="ace" id="chkCheckALL" />
                <span class="lbl"></span>
            </label>
        </th>*@
                        <th class="center">STT</th>
                        <th class="center">Ngày xóa</th>
                        <th class="center">Người xóa</th>
                        <th class="text-left">Số tiền</th>
                        <th class="text-left">Thẻ</th>
                        <th class="text-left">Biển số</th>
                        <th class="text-left">Thời gian</th>
                        <th class="text-left hidden-480" idata="CardGroup">Nhóm thẻ <i class=""></i></th>
                        <th class="text-left hidden-480" idata="Customer">Khách hàng <i class=""></i></th>
                        <th class="text-left hidden-480">Làn</th>
                        <th class="text-left">Giám sát</th>
                        <th class="center">Khôi phục</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Data.Any())
                    {
                        var count = (Model.PageIndex - 1) * Model.PageSize;
                        foreach (var item in Model.Data)
                        {
                            count++;
                            <tr>
                                @*<td class="center">
                                        <label class="pos-rel">
                                            <input type="checkbox" id="chk_@item.Id.ToString()" name="Id" value="@item.Id.ToString()" class="ace chkCheck" @string.Format("{0}", (listEventSelected != null && listEventSelected.Any(n => n.Equals(item.Id))) ? "checked" : "") />
                                            <span class="lbl"></span>
                                        </label>
                                    </td>*@
                                <td class="text-center">@item.RowNumber</td>
                                <td>
                                    @item.DateCreated.ToString("dd/MM/yyyy HH:mm:ss")
                                </td>
                                <td>

                                    @{
                                        var objuser = listuser != null ? listuser.FirstOrDefault(n => n.Id.ToString().Equals(item.UserId)) : null;

                                        if (objuser != null)
                                        {
                                            <span>@objuser.Username</span>
                                        }
                                    }

                                </td>
                                <td class="text-right">
                                    @string.Format("{0:N0}", long.Parse(item.Moneys))
                                </td>
                                <td>
                                    <p>@item.CardNo</p>
                                    <p>  <strong>Mã thẻ: </strong> @item.CardNumber</p>

                                </td>

                                <td>
                                    @item.Plate
                                </td>
                                <td>
                                    <p><strong>Vào: </strong>@Convert.ToDateTime(item.DateTimeIn).ToString("dd/MM/yyy HH:mm:ss")</p>
                                    <p><strong>Ra: </strong> @Convert.ToDateTime(item.DateTimeOut).ToString("dd/MM/yyy HH:mm:ss")</p>

                                </td>

                                <td>
                                    @{
                                        var objcardGroup = listcardGroup != null ? listcardGroup.FirstOrDefault(n => n.ItemValue.ToString().Equals(item.CardGroupID)) : null;

                                        if (objcardGroup != null)
                                        {
                                            <span>@objcardGroup.ItemText</span>
                                        }
                                    }
                                </td>
                                <td>
                                    @item.CustomerName
                                </td>
                                <td>
                                    <p>
                                        <strong>Vào: </strong>
                                        @{
                                            var objLaneIn = listLane != null ? listLane.FirstOrDefault(n => n.LaneID.ToString().Equals(item.LaneIDIn)) : null;

                                            if (objLaneIn != null)
                                            {
                                                <span>@objLaneIn.LaneName</span>
                                            }
                                        }
                                    </p>
                                    <p>
                                        <strong>Ra: </strong>
                                        @{
                                            var objLaneOut = listLane != null ? listLane.FirstOrDefault(n => n.LaneID.ToString().Equals(item.LaneIDOut)) : null;

                                            if (objLaneOut != null)
                                            {
                                                <span>@objLaneOut.LaneName</span>
                                            }
                                        }
                                    </p>

                                </td>

                                <td>
                                    <p>
                                        <strong>Vào: </strong>
                                        @{
                                            var objuserIn = listuser != null ? listuser.FirstOrDefault(n => n.Id.ToString().Equals(item.UserIDIn)) : null;

                                            if (objuserIn != null)
                                            {
                                                <span>@objuserIn.Username</span>
                                            }
                                        }
                                    </p>
                                    <p>
                                        <strong>Ra: </strong>
                                        @{
                                            var objuserOut = listuser != null ? listuser.FirstOrDefault(n => n.Id.ToString().Equals(item.UserIDOut)) : null;

                                            if (objuserOut != null)
                                            {
                                                <span>@objuserOut.Username</span>
                                            }
                                        }
                                    </p>

                                </td>
                                <td class="center">
                                    <a href="javascript:void(0)" idata="@item.RowId" name="btnRetoreRow" class="green" title="Khôi phục">
                                        <i class="ace-icon fa fa-refresh bigger-120"></i>
                                    </a>
                                </td>


                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>

    </div>
    @if (Model.Data.Any())
    {
        <div class="col-xs-12">
            <div class="pull-right">
                @Html.GeneratePagingFooter(Model.TotalPage, Model.PageIndex, Model.PageSize, "pagination", x => Url.Action("HistoryDeleteEvent", "tblCardEventDelete", new
           {
               page = x,
               key = ViewBag.KeyWord,
               cardgroup = ViewBag.CardGroupId,
               datefrompicker = ViewBag.DateFromPickerValue,
               lane = ViewBag.LaneId,
               user = ViewBag.UserId,
               fromdate = ViewBag.fromdateValue,
               todate = ViewBag.todateValue,
               customergroup = ViewBag.CustomerGroupId,
               IsFilterByTimeIn = ViewBag.isFilterByTimeIn,
               pageSize = ViewBag.PageSize
           }))
            </div>
        </div>
    }
</div>

@section scripts{
    @*<script src="~/Scripts/ExcelColumn.js"></script>
    <script src="~/Areas/Parking/Scripts/ReportController.js"></script>*@
    <script>
        jQuery(function ($) {

            var $overflow = '';
            var colorbox_params = {
                rel: 'colorbox',
                reposition: true,
                scalePhotos: true,
                scrolling: false,
                previous: '<i class="ace-icon fa fa-arrow-left"></i>',
                next: '<i class="ace-icon fa fa-arrow-right"></i>',
                close: '&times;',
                current: '{current} of {total}',
                maxWidth: '100%',
                maxHeight: '100%',
                onOpen: function () {
                    $overflow = document.body.style.overflow;
                    document.body.style.overflow = 'hidden';
                },
                onClosed: function () {
                    document.body.style.overflow = $overflow;
                },
                onComplete: function () {
                    $.colorbox.resize();
                }
            };

            $('.ace-thumbnails [data-rel="colorbox"]').colorbox(colorbox_params);
            $("#cboxLoadingGraphic").html("<i class='ace-icon fa fa-spinner orange fa-spin'></i>");//let's add a custom loading icon


            $(document).one('ajaxloadstart.page', function (e) {
                $('#colorbox, #cboxOverlay').remove();
            });



        })

        $(document).ready(function () {
            //$('#sidebar').removeClass('sidebar-scroll');
            //$('#sidebar').addClass('menu-min');
            //$('#sidebar-toggle-icon').removeClass('fa-angle-double-left');
            //$('#sidebar-toggle-icon').addClass('fa-angle-double-right');
            //$('#groupname1').hide();
            //$('#groupname2').hide();

            //Export excel
            $('button[name=btnExport]').click(function () {
                $('#chkExport').val('1');
                $('#frmReportInOut').submit();
            });

            $('button[name=btnFilter]').click(function () {
                $('#chkExport').val('0'); // ko xuat xxcel
                $('#pageSize').val($('.cssPagingSelect').val());
                $('#frmReportInOut').submit();
            });

            $('#ddlcardgroup').change(function () {
                var str = '';
                var cmd = $(this);
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ',';
                });
                $('#cardgroup').val(str);
            });

            $('#ddllane').change(function () {
                var str = '';
                var cmd = $(this);
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ',';
                });
                $('#lane').val(str);
            });

            $('#ddluser').change(function () {
                var str = '';
                var cmd = $(this);
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ',';
                });
                $('#user').val(str);
            });

            $('#ddlExcelColumn').change(function () {
                var cmd = $(this);
                var str = '';
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ',';
                });
                $('#excelcol').val(str);
            });

            //Xóa 1 bản ghi
            DeleteSubmit(_prefixParkingDomain + '/Report/DeleteEventInOut')
        });


        //Event change pageSize
        $('body').on('change', '.cssPagingSelect', function () {
            var cmd = $(this);
            var _val = cmd.val();
            var _frdate = $('input[name=fromdate]').val();
            var _todate = $('input[name=todate]').val();
            var _key = $('input[name=key]').val();
            var _cardgroup = $('#cardgroup').val();
            var _customergroup = $('#customergroup').val();
            var _user = $('#user').val();
            var _lane = $('#lane').val();
            var _checktime = $('input[name=IsFilterByTimeIn]').is(':checked');
            var url = '/Parking/tblCardEventDelete/HistoryDeleteEvent?fromdate=' + _frdate + '&todate=' + _todate + '&key=' + _key + '&cardgroup=' + _cardgroup + '&customergroup=' + _customergroup + '&user=' + _user + '&lane=' + _lane + '&pageSize=' + _val + '&IsFilterByTimeIn=' + _checktime;
            window.location.href = url;
            cmd.find('option').removeAttr('selected');
        });

        $('body').on('click', 'a[name=btnRestore]', function () {
            bootbox.confirm('Bạn chắc chắn muốn khôi phục những sự kiện này?', function (result) {
                if (result) {
                    RestoreEvent("");
                }
            });                    
        });
        $('body').on('click', 'a[name=btnRetoreRow]', function () {
            var id = $(this).attr("idata");
            bootbox.confirm('Bạn chắc chắn muốn khôi phục sự kiện này?', function (result) {
                if (result) {
                    RestoreEvent(id);
                }
            });

        });
        function RestoreEvent(rowid) {
            var _frdate = $('input[name=fromdate]').val();
            var _todate = $('input[name=todate]').val();
            var _key = $('input[name=key]').val();
            var _cardgroup = $('#cardgroup').val();
            var _customergroup = $('#customergroup').val();
            var _user = $('#user').val();
            var _lane = $('#lane').val();

            var formData = new FormData();
            formData.append("customergroup", _customergroup);
            formData.append("key", _key);
            formData.append("user", _user);
            formData.append("cardgroup", _cardgroup);
            formData.append("lane", _lane);
            formData.append('fromdate', _frdate);
            formData.append('todate', _todate);
            formData.append('rowid', rowid);

            $.ajax({
                type: "POST",
                datatype: "json",
                data: formData,
                url: '/Parking/tblCardEventDelete/RestoreDeleteEvent',
                enctype: 'multipart/form-data',
                processData: false,
                contentType: false,
                success: function (data) {
                    if (data.isSuccess) {
                        toastr.success(data.Message);
                        location.reload();
                    } else {
                        toastr.error(data.Message);
                    }
                }
            });
        }
    </script>
}
