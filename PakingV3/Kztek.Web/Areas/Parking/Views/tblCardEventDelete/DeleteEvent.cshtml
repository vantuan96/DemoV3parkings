@using Kztek.Model.CustomModel
@using Kztek.Web.Core.Extensions
@using Kztek.Web.Attributes

@model PageModel<Kztek.Model.Models.ReportInOut108>

@{
    ViewBag.Title = "DeleteEvent";

    var listLane = (List<Kztek.Model.Models.tblLane>)ViewBag.LaneList;

    var listcardGroup = (List<SelectListModel2>)ViewBag.CardGroups;

    var listuser = (List<Kztek.Model.Models.User>)ViewBag.Users;

    var user = Kztek.Web.Core.Functions.GetCurrentUser.GetUser();

    bool isTimeIn = ViewBag.isFilterByTimeIn;

    string path = HttpContext.Current.Request.Url.PathAndQuery;
    var listEventSelected = (List<string>)ViewBag.selectedEventValue;

    var objTotal = (Kztek.Model.Models.Event.TotalEventDelete)ViewBag.TotalEventDelete;
}

<div class="page-header">
    <h1>
        Xóa sự kiện (<span>@Model.TotalItem</span>)
    </h1>
</div>

<div class="row">
    @using (Html.BeginForm("DeleteEvent", "tblCardEventDelete", FormMethod.Get, new { id = "frmReportInOut" }))
    {
        @Html.Hidden("chkExport", "0")
        @*@Html.Hidden("column", column)
            @Html.Hidden("desc", isDescSort)*@
        <div class="col-md-2 col-xs-12 divboxmd">
            Từ khóa:
            <input type="text" name="key" value="@ViewBag.KeyWord" placeholder="Mã thẻ, Biển số..." class="form-control" />
        </div>
        <div class="col-md-2 col-xs-12 divboxmd">
            Từ ngày:
            <div class="input-group">
                @Html.TextBox("fromdate", (string)ViewBag.fromdateValue, new { @class = "form-control datepicker" })
                <span class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </span>
            </div>
        </div>
        <div class="col-md-2 col-xs-12 divboxmd">
            Đến ngày:
            <div class="input-group">
                @Html.TextBox("todate", (string)ViewBag.todateValue, new { @class = "form-control datepicker" })
                <span class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </span>
            </div>
        </div>
        <div class="col-md-3 col-xs-12 divboxmd line-height-380">
            <label>
                <input type="radio" name="IsFilterByTimeIn" value="true" class="ace" @string.Format("{0}", isTimeIn ? "checked" : "") )>
                <span class="lbl"> Lọc theo thời gian vào </span>
            </label>
        </div>
        <div class="col-md-3 col-xs-12 divboxmd line-height-380">
            <label>
                <input type="radio" name="IsFilterByTimeIn" value="false" class="ace" @string.Format("{0}", isTimeIn ? "" : "checked") )>
                <span class="lbl"> Lọc theo thời gian ra </span>
            </label>
        </div>

        <div class="col-xs-12">
            <div class="row">
                <div class="col-md-2 col-xs-12 divboxmd">
                    % ngẫu nhiên:
                    <input type="number" max="100" min="0" name="number" value="@ViewBag.Number" />
                </div>
                <div class="col-md-2 col-xs-12 divboxmd">
                    Nhóm khách hàng:
                    @Html.DropDownList("customergroup", new SelectList(ViewBag.CustomerGroups, "ItemValue", "ItemText", ViewBag.CustomerGroupId), "-- Lựa chọn --", new { @class = "form-control chosen-select" })
                </div>
                <div class="col-md-2 col-xs-12 divboxmd">
                    <div class="control-label">
                        Làn:
                    </div>
                    <div>
                        @Html.Action("DroplistMultiSelectTemplate1", "CommonUse", new { _dt = ViewBag.LaneDT, itemValue = "LaneID", itemText = "LaneName", selectedValues = ViewBag.LaneId, Modelname = "ddllane", labelName = "-- Lựa chọn --" })
                        @Html.Hidden("lane")
                    </div>
                </div>
                <div class="col-md-2 col-xs-12 divboxmd">
                    <div class="control-label">
                        Người dùng:
                    </div>
                    <div>
                        @Html.Action("DroplistMultiSelectTemplate1", "CommonUse", new { _dt = ViewBag.UserDT, itemValue = "Id", itemText = "Username", selectedValues = ViewBag.UserId, Modelname = "ddluser", labelName = "-- Lựa chọn --" })
                        @Html.Hidden("user")
                    </div>
                </div>
                <div class="col-md-2 col-xs-12 divboxmd">
                    <div class="control-label">
                        Nhóm thẻ:
                    </div>
                    <div>
                        @Html.Action("DroplistMultiSelectTemplate1", "CommonUse", new { _dt = ViewBag.CardGroupDT, itemValue = "ItemValue", itemText = "ItemText", selectedValues = ViewBag.CardGroupId, Modelname = "ddlcardgroup", labelName = "-- Lựa chọn --" })
                        @Html.Hidden("cardgroup")
                    </div>
                </div>
            </div>
        </div>


        <div class="col-md-12 col-xs-12 divboxmd">
            @Html.Action("Actions", "Home", new { ActionName = "Search", ControllerName = "tblCardEventDelete" })

            <a href="@Url.Action("DeleteEvent", "tblCardEventDelete")" class="btn btn-primary btn-white btn-bold" type="submit">
                <i class="fa fa-refresh green" aria-hidden="true"></i>
                Reset
            </a>
           
        </div>
    }
</div>
<div class="hr hr-18 dotted hr-24"></div>
<div class="row" style="padding-bottom:10px;">
    @if (CheckAuthorizeAction.CheckActionPemission("tblCardEventDelete", "HistoryDeleteEvent"))
    {
        <div class="col-xs-12 col-sm-2">
            <a href="@Url.Action("HistoryDeleteEvent","tblCardEventDelete")" class="btn btn-sm btn-info">
                <i class="fa fa-table"></i> Lịch sử xóa sự kiện
            </a>
        </div>
    }

    <div class="col-xs-12 col-sm-2">
        <a href="javascript:void(0)" class="btn btn-sm btn-danger" id="btnDeleteEvent">
            <i class=" fa fa-trash"></i> Xóa sự kiện
        </a>

    </div>
    <div class="col-xs-12 col-sm-5">
        <div class="row">
            <span style="font-weight:bold;">
                Doanh thu ngẫu nhiên @ViewBag.Number %:

                @if (ViewBag.Number != "0")
                {
                    if (Model.Data.Any() && Model.Data.FirstOrDefault().TotalMoneyPercent != "0")
                    {
                        <span style="color:darkred;"> @Convert.ToDecimal(Model.Data.FirstOrDefault().TotalMoneyPercent).ToString("###,###") VNĐ</span>

                    }
                    else
                    {
                        <span style="color:darkred;">0 VNĐ</span>
                    }
                }
                else
                {
                    <span style="color:darkred;">0 VNĐ</span>
                }

                @if (!string.IsNullOrEmpty(objTotal.TotalMoney) && Model.Data.Any() && Convert.ToDecimal(objTotal.TotalMoney) > 0)
                {
                    var _percent = (Convert.ToDecimal(Model.Data.FirstOrDefault().TotalMoneyPercent) * 100) / Convert.ToDecimal(objTotal.TotalMoney);

                    <span>(Chiếm @Math.Round(_percent, 2) % doanh thu)</span>
                }

            </span>
        </div>
        <div class="row">
            <span style="font-weight:bold;">
                Doanh thu thực: <span style="color:darkred;">@objTotal.TotalMoney VNĐ</span> (Tổng sự kiện: @objTotal.TotalCount)
            </span>
        </div>


    </div>

</div>
@*<div class="hr hr-18 dotted hr-24"></div>*@

<div class="row">
    <div class="col-xs-12">
        <div style="height:600px;overflow:auto;">
            <table class="table  table-bordered table-hover">
                <thead>
                    <tr class="headerSort">
                        <th class="center">
                            <label class="pos-rel">
                                <input type="checkbox" class="ace" id="chkCheckALL" />
                                <span class="lbl"></span>
                            </label>
                        </th>
                        <th class="center">STT</th>
                        <th class="text-left">Số tiền</th>
                        <th class="text-left">Thẻ</th>
                        <th class="text-left">Biển số</th>
                        <th class="text-left">Thời gian</th>
                        <th class="text-left hidden-480" idata="CardGroup">Nhóm thẻ <i class=""></i></th>
                        <th class="text-left hidden-480" idata="Customer">Khách hàng <i class=""></i></th>
                        <th class="text-left hidden-480">Làn</th>
                        <th class="text-left">Giám sát</th>

                    </tr>
                </thead>
                <tbody>
                    @if (Model.Data.Any())
                    {
                        var count = (Model.PageIndex - 1) * Model.PageSize;
                        foreach (var item in Model.Data)
                        {
                            count++;
                            <tr>
                                <td class="center">
                                    <label class="pos-rel">
                                        <input type="checkbox" id="chk_@item.Id.ToString()" name="Id" value="@item.Id.ToString()" class="ace chkCheck" @string.Format("{0}", (listEventSelected != null && listEventSelected.Any(n => n.Equals(item.Id))) ? "checked" : "") />
                                        <span class="lbl"></span>
                                    </label>
                                </td>
                                <td class="text-center">@item.RowNumber</td>
                                <td class="text-right">
                                    @string.Format("{0:N0}", long.Parse(item.Moneys))
                                </td>
                                <td>
                                    <p>@item.CardNo</p>
                                    <p>  <strong>Mã thẻ: </strong> @item.CardNumber</p>

                                </td>

                                <td>
                                    @item.Plate
                                </td>
                                <td>
                                    <p><strong>Vào: </strong>@Convert.ToDateTime(item.DateTimeIn).ToString("dd/MM/yyy HH:mm:ss")</p>
                                    <p><strong>Ra: </strong> @Convert.ToDateTime(item.DateTimeOut).ToString("dd/MM/yyy HH:mm:ss")</p>

                                </td>

                                <td>
                                    @{
                                        var objcardGroup = listcardGroup != null ? listcardGroup.FirstOrDefault(n => n.ItemValue.ToString().Equals(item.CardGroupID)) : null;

                                        if (objcardGroup != null)
                                        {
                                            <span>@objcardGroup.ItemText</span>
                                        }
                                    }
                                </td>
                                <td>
                                    @item.CustomerName
                                </td>
                                <td>
                                    <p>
                                        <strong>Vào: </strong>
                                        @{
                                            var objLaneIn = listLane != null ? listLane.FirstOrDefault(n => n.LaneID.ToString().Equals(item.LaneIDIn)) : null;

                                            if (objLaneIn != null)
                                            {
                                                <span>@objLaneIn.LaneName</span>
                                            }
                                        }
                                    </p>
                                    <p>
                                        <strong>Ra: </strong>
                                        @{
                                            var objLaneOut = listLane != null ? listLane.FirstOrDefault(n => n.LaneID.ToString().Equals(item.LaneIDOut)) : null;

                                            if (objLaneOut != null)
                                            {
                                                <span>@objLaneOut.LaneName</span>
                                            }
                                        }
                                    </p>

                                </td>

                                <td>
                                    <p>
                                        <strong>Vào: </strong>
                                        @{
                                            var objuserIn = listuser != null ? listuser.FirstOrDefault(n => n.Id.ToString().Equals(item.UserIDIn)) : null;

                                            if (objuserIn != null)
                                            {
                                                <span>@objuserIn.Username</span>
                                            }
                                        }
                                    </p>
                                    <p>
                                        <strong>Ra: </strong>
                                        @{
                                            var objuserOut = listuser != null ? listuser.FirstOrDefault(n => n.Id.ToString().Equals(item.UserIDOut)) : null;

                                            if (objuserOut != null)
                                            {
                                                <span>@objuserOut.Username</span>
                                            }
                                        }
                                    </p>

                                </td>



                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>

    </div>
    @*@if (Model.Data.Any())
    {
        <div class="col-xs-12">
            <div class="pull-right">
                @Html.GeneratePagingFooter(Model.TotalPage, Model.PageIndex, Model.PageSize, "pagination", x => Url.Action("DeleteEvent", "tblCardEventDelete", new
           {
               page = x,
               number = ViewBag.Number,
               key = ViewBag.KeyWord,
               cardgroup = ViewBag.CardGroupId,
               datefrompicker = ViewBag.DateFromPickerValue,
               lane = ViewBag.LaneId,
               user = ViewBag.UserId,
               fromdate = ViewBag.fromdateValue,
               todate = ViewBag.todateValue,
               customergroup = ViewBag.CustomerGroupId,
               IsFilterByTimeIn = ViewBag.isFilterByTimeIn
           }))
            </div>
        </div>
    }*@
</div>

@section scripts{

    <script>

        $(document).ready(function () {

            $("input[name=number]").change(function () {
                var number = $(this).val();
                if (number === '') {
                    $(this).val("0");
                } else {
                    var a = parseInt(number);

                    if (!isNaN(a) && a > 100) {
                        $(this).val("100");
                    } else if (!isNaN(a) && a < 0) {
                        $(this).val("0");
                    }
                }
                
            });
            
            $('#btnDeleteEvent').click(function () {
                $.ajax({
                    url: _prefixParkingDomain + '/tblCardEventDelete/GetCountEvent',
                    data: {},
                    type: 'json',
                    async: true,
                    success: function (data) {
                     
                        bootbox.confirm('Bạn có xóa ' + data + ' sự kiện đã chọn?', function (result) {
                            if (result) {
                                $.ajax({
                                    url: _prefixParkingDomain + '/tblCardEventDelete/SaveDeleteEvent',
                                    data: {},
                                    type: 'json',
                                    async: true,
                                    success: function (data) {
                                        if (data.isSuccess) {

                                            var _frdate = $('input[name=fromdate]').val();
                                            var _todate = $('input[name=todate]').val();
                                            var _key = $('input[name=key]').val();
                                            var _cardgroup = $('#cardgroup').val();
                                            var _customergroup = $('#customergroup').val();
                                            var _user = $('#user').val();
                                            var _lane = $('#lane').val();
                                            var _isfilte = $("input[name=IsFilterByTimeIn]").is(":checked");
                                            var url = '/Parking/tblCardEventDelete/DeleteEvent?fromdate=' + _frdate + '&todate=' + _todate + '&key=' + _key + '&cardgroup=' + _cardgroup + '&customergroup=' + _customergroup + '&user=' + _user + '&lane=' + _lane + '&IsFilterByTimeIn=' + _isfilte;
                                            window.location.href = '/Parking/tblCardEventDelete/DeleteEvent';
                                            toastr.success(data.Message, "Thông báo");
                                        } else {
                                            toastr.error(data.Message, "Thông báo");
                                        }

                                    }
                                });

                            }
                        });
                    }
                });

               
            });


            $('button[name=btnFilter]').click(function () {
                $('#chkExport').val('0'); // ko xuat xxcel
                $('#frmReportInOut').submit();
            });

            $('#ddlcardgroup').change(function () {
                var str = '';
                var cmd = $(this);
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ',';
                });
                $('#cardgroup').val(str);
            });

            $('#ddllane').change(function () {
                var str = '';
                var cmd = $(this);
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ',';
                });
                $('#lane').val(str);
            });

            $('#ddluser').change(function () {
                var str = '';
                var cmd = $(this);
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ',';
                });
                $('#user').val(str);
            });

           $("#chkCheckALL").click(function () {
                if ($(this).is(":checked")) {
                    var choices = [];
                    $('.chkCheck').each(function () {
                        if ($(this).is(":checked")) {
                            var cn = $(this).val();
                            choices.push(cn);
                        }
                    });

                    AddRemoveChoice(choices, '@Model.TotalItem', true);

                } else {
                    var unchoices = [];

                    $('.chkCheck').each(function () {
                        if (!$(this).is(":checked")) {
                            var cn = $(this).val();
                            unchoices.push(cn);
                        }
                    });

                    AddRemoveChoice(unchoices, '@Model.TotalItem', false);
                }
            });

             $('.chkCheck').click(function () {
                if ($(this).is(":checked")) {
                    var choices = [];
                    var cn = $(this).val();
                    choices.push(cn);
                    AddRemoveChoice(choices, '@Model.TotalItem', true);

                } else {
                    var unchoices = [];
                    var cn1 = $(this).val();
                    unchoices.push(cn1);
                    AddRemoveChoice(unchoices, '@Model.TotalItem', false);
                }
            });
        });


        function AddRemoveChoice(choices, totalItem, isAdd) {
            $.ajax({
                url: _prefixParkingDomain + '/tblCardEventDelete/AddOrRemoveOneAllSeleted',
                data: { Id: choices, isAdd: isAdd },
                type: 'json',
                async: true,
                success: function (data) {
                  //  loadModalSelected(totalItem);
                }
            });
        };

        //function loadModalSelected(totalItem, url) {
        //    $.ajax({
        //        url: _prefixParkingDomain + '/Report/ModalSelectedCardDay',
        //        type: 'GET',
        //        data: {
        //            totalItem: totalItem,
        //            url: url
        //        },
        //        success: function (response) {
        //            $('#boxCardAction').html('');

        //            $('#boxCardAction').html(response);
        //        }
        //    });
        //}
    </script>
}

