@using Kztek.Model.CustomModel
@using Kztek.Web.Core.Extensions
@using Kztek.Web.Attributes

@model PageModel<Kztek.Model.Models.tblActiveCardCustomViewModel>

@{
    ViewBag.Title = "Danh sách thẻ đã gia hạn";

    string controller = "ActiveCardListTRANSERCO";

    var lCustomer = (List<Kztek.Model.Models.tblCustomer>)ViewBag.CustomerList;
}

<div class="page-header">
    <h1>
        @ViewBag.Title (<span>@Model.TotalItem</span>)
    </h1>
</div>

@using (Html.BeginForm("Index", "ActiveCardListTRANSERCO", FormMethod.Get, new { id = "frmActiveCardList" }))
{
    <div class="row">

        @Html.Hidden("chkExport", "0")
        <div class="col-md-2 col-xs-12 divboxmd">
            Từ khóa:
            <input type="text" name="key" value="@ViewBag.keyValue" placeholder="Từ khóa..." class="form-control" />
        </div>
        <div class="col-md-3 col-xs-12 divboxmd">
            Từ ngày:
            <div class="input-group">
                @Html.TextBox("fromdate", (string)ViewBag.fromdateValue, new { @class = "form-control daterangtimepicker" })
                <span class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </span>
            </div>
        </div>
        <div class="col-md-3 col-xs-12 divboxmd">
            Đến ngày:
            <div class="input-group">
                @Html.TextBox("todate", (string)ViewBag.todateValue, new { @class = "form-control daterangtimepicker" })
                <span class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </span>
            </div>
        </div>

        <div class="col-md-2 col-xs-12 divboxmd">
            Nhóm khách hàng:
            @Html.DropDownList("customergroupids", new SelectList(ViewBag.customergroups, "ItemValue", "ItemText", ViewBag.customergroupidsValue), "-- Lựa chọn --", new { @class = "form-control chosen-select" })
        </div>

         <div class="col-md-2 col-xs-12 divboxmd">
            Thanh toán:
            @Html.DropDownList("typepay", new SelectList(ViewBag.TypePay, "ItemValue", "ItemText", ViewBag.TypePayValue), "-- Lựa chọn --", new { @class = "form-control " })
        </div>
    </div>

    <div class="row">
        <div class="col-md-2 col-xs-12 divboxmd">
            <div>Nhóm thẻ:</div>
            <div>
                @Html.Action("DroplistMultiSelectTemplate1", "CommonUse", new { _dt = ViewBag.cardgroups, itemValue = "CardGroupID", itemText = "CardGroupName", selectedValues = ViewBag.cardgroupidsValue, Modelname = "ddlcardgroup", labelName = "-- Lựa chọn --" })
                @Html.Hidden("cardgroupids")
            </div>
        </div>
        <div class="col-md-2 col-xs-12 divboxmd">
            <div>
                Người dùng:
            </div>
            <div>
                @Html.Action("DroplistMultiSelectTemplate1", "CommonUse", new { _dt = ViewBag.users, itemValue = "Id", itemText = "Username", selectedValues = ViewBag.useridsValue, Modelname = "ddluser", labelName = "-- Lựa chọn --" })
                @Html.Hidden("userids")
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3 col-xs-12 divboxmd line-height-450" style="margin-top:14px;">
            @Html.Action("Actions", "Home", new { ActionName = "Search", ControllerName = controller })

            @Html.Action("Actions", "Home", new { ActionName = "Export", ControllerName = controller })

            @Html.Action("Actions", "Home", new { ActionName = "Index", ControllerName = controller })
        </div>
    </div>
}

<div class="hr hr-18 dotted hr-24"></div>

<div class="row">
    <div class="col-xs-12">
        <div class="divScroll">
            <table class="table  table-bordered table-hover">
                <thead>
                    <tr class="headerSort">
                        <th class="center"> STT </th>
                        <th class="text-left" idata="CardNo"> CardNo <i class=""></i></th>
                        <th class="text-left" idata="CardNumber"> Mã thẻ <i class=""></i></th>
                        <th class="text-left"> Khách hàng </th>
                        <th class="text-left"> Biển số </th>
                        <th class="text-left"> Mã hợp đồng</th>
                        <th class="text-left"> Nhóm khách hàng </th>
                        <th class="text-left"> Mã số thuế </th>
                        <th class="text-left"> Thời hạn cũ </th>
                        <th class="text-left"> Thời hạn mới </th>
                        <th class="center"> Phí </th>
                        <th class="text-left"> Thanh toán</th>
                        <th class="text-left"> NV thực hiện </th>
                        <th class="text-left"> Ngày thực hiện </th>
                        <th class="text-left" width="80">Xử lý</th>
                    </tr>
                </thead>

                <tbody>
                    @if (Model.Data.Any())
                    {
                        var count = (Model.PageIndex - 1) * Model.PageSize;
                        foreach (var item in Model.Data)
                        {
                            count++;
                            <tr>
                                <td class="center">@count</td>

                                <td class="text-left">
                                    @item.CardNo
                                </td>

                                <td class="text-left">
                                    @item.CardNumber
                                </td>

                                <td class="center">
                                    @{
                                        var objC = lCustomer.FirstOrDefault(n => n.CustomerID.ToString() == item.CustomerID);
                                        if (objC != null)
                                        {
                                            <span>@objC.CustomerName</span>
                                        }
                                    }

                                </td>
                                <td class="text-left">
                                    @item.Plate
                                </td>

                                <td class="center">
                                    @*@{
                                    var objd = lCustomer.FirstOrDefault(n => n.CustomerID.ToString() == item.CustomerID);
                                    if (objd != null)
                                    {
                                        <span>@objd.Description</span>
                                    }
                                }*@
                                    @item.ContractCode
                                </td>
                                <td class="text-left">
                                    @item.CustomerGroupName
                                </td>
                                <td class="center">
                                    @item.Tax
                                </td>
                                <td class="center">
                                    @Convert.ToDateTime(item.OldExpireDate).ToString("dd/MM/yyyy")
                                </td>

                                <td class="center">
                                    @Convert.ToDateTime(item.NewExpireDate).ToString("dd/MM/yyyy")
                                </td>

                                <td class="center">
                                    @if (item.FeeLevel > 0)
                                    {
                                        @item.FeeLevel.ToString("###,###")
                                    }
                                    else
                                    {
                                        <span>0</span>
                                    }
                                </td>

                                <td class="center">
                                    @if (item.IsTransferPayment)
                                    {
                                        <span>Chuyển khoản</span>
                                    }
                                    else
                                    {

                                        <span>Tiền mặt</span>
                                    }
                                </td>

                                <td class="center">
                                    @item.UserName
                                </td>

                                <td class="center">
                                    @Convert.ToDateTime(item.Date).ToString("dd/MM/yyyy HH:mm")
                                </td>
                                <td class="center">
                                    @if (CheckAuthorizeAction.CheckActionPemission(controller, "Delete"))
                                    {
                                        <a href="javascript:void(0)" class="btnDelete red" idata="@item.Id" title="Xóa">
                                            <i class="ace-icon fa fa-trash bigger-120"></i>
                                        </a>
                                    }
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
      
    </div><!-- /.span -->
    @if (Model.Data.Any())
    {
        <div class="col-xs-12">
            <div class="pull-right">
                @Html.GeneratePagingFooter(Model.TotalPage, Model.PageIndex, Model.PageSize, "pagination", x => Url.Action("Index", "ActiveCardListTRANSERCO", new
           {
               page = x,
               key = ViewBag.keyValue,
               cardgroupids = ViewBag.cardgroupidsValue,
               customergroupids = ViewBag.customergroupidsValue,
               userids = ViewBag.usersValue,
               fromdate = ViewBag.fromdateValue,
               todate = ViewBag.todateValue
           }))
            </div>
        </div>
    }
</div><!-- /.row -->
@section scripts{
    <script>
        //function RemoveEventProcess(cardNumber, id) {
        //    if (confirm('Bạn chắc chắn muốn xóa bản ghi này?')) {
        //        $.ajax({
        //            url: _prefixParkingDomain + '/ActiveCardList/DeleteEvent',
        //            data: { id: id, cardnumber: cardNumber },
        //            type: 'json',
        //            //async:false,
        //            success: function (data) {
        //                if (data.isSuccess) {
                         
        //                    toastr.success(data.Message, 'Thông báo');
        //                    window.location.href = _prefixParkingDomain + '/ActiveCardList/Index';
        //                } else {
        //                    toastr.error(data.Message)
        //                }
        //            }
        //        });
        //    }
        //}

        $(document).ready(function () {

            $('.btnDelete').click(function () {
                var cmd = $(this);
                var _id = cmd.attr('idata');

                bootbox.confirm("Bạn chắc chắn muốn xóa bản ghi này?", function (result) {
                    if (result) {
                        $.ajax({
                            url: _prefixParkingDomain + '/ActiveCardListTRANSERCO/DeleteEvent',
                            data: { id: _id},
                            type: 'json',
                            //async:false,
                            success: function (data) {
                                if (data.isSuccess) {
                                    cmd.parent().parent().fadeOut();
                                    toastr.success(data.Message, 'Thông báo');
                                } else {
                                    toastr.error(data.Message, 'Thông báo');
                                }
                            }
                        });
                    }
                });
            });

            //Export excel
            $('button[name=btnExport]').click(function () {
                $('#chkExport').val('1');
                $('#frmActiveCardList').submit();
            });

            $('button[name=btnFilter]').click(function () {
                $('#chkExport').val('0'); // ko xuat xxcel
                $('#frmActiveCardList').submit();
            });

            //
            $('#ddlcardgroup').change(function () {
                var str = '';
                var cmd = $(this);
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ',';
                });
                $('#cardgroupids').val(str);
            });


            //
            $('#ddluser').change(function () {
                var str = '';
                var cmd = $(this);
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ',';
                });
                $('#userids').val(str);
            });
        });
    </script>
}

