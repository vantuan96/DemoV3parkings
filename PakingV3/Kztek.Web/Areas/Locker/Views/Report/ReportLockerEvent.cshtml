@using Kztek.Model.CustomModel
@using Kztek.Web.Core.Extensions
@using Kztek.Web.Attributes
@using Kztek.Web.Core.Functions

@model PageModel<Kztek.Model.Models.LockerEvent.tblLockerEvent_Report>

@{
    ViewBag.Title = "ReportLockerEvent";

}

<div class="page-header">
    <h1>
        Báo cáo sự kiện tủ đồ (<span>@Model.TotalItem</span>)
    </h1>
</div>


    @using (Html.BeginForm("ReportLockerEvent", "Report", FormMethod.Get, new { id = "frmReportIn" }))
    {
        @Html.Hidden("chkExport", "0")
        <div class="row">
             <div class="col-md-2 col-xs-12 divboxmd">
            <label class="control-label"> Từ khóa: </label>
            <input type="text" name="key" value="@ViewBag.KeyWord" class="form-control" />
        </div>

        <div class="col-md-3 col-xs-12 divboxmd">
            <label class="control-label"> Từ ngày </label>
            <div class="input-group">
                @Html.TextBox("fromdate", (string)ViewBag.fromdateValue, new { @class = "form-control datepicker" })
                <span class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </span>
            </div>
        </div>
        <div class="col-md-3 col-xs-12 divboxmd">
            <label class="control-label"> Đến ngày </label>
            <div class="input-group">
                @Html.TextBox("todate", (string)ViewBag.todateValue, new { @class = "form-control datepicker" })
                <span class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </span>
            </div>
        </div>
              @*<div class="col-md-2 col-xs-12 divboxmd">
            <label class="control-label"> Loại sự kiện </label>
            @Html.DropDownList("type", new SelectList(ViewBag.TypeDT, "ItemValue", "ItemText", ViewBag.Type), new { @class = "form-control" })
        </div>*@
           
        </div>
        <div class="row">
            <div class="col-md-2 col-xs-12 divboxmd">
                <div class="control-label">
                    Nhóm thẻ
                </div>
                <div>
                    @Html.Action("DroplistMultiSelectTemplate1", "CommonUse", new { _dt = ViewBag.CardGroupDT, itemValue = "ItemValue", itemText = "ItemText", selectedValues = ViewBag.CardGroupId, Modelname = "ddlcardgroup", labelName = "-Lựa chọn-" })
                    @Html.Hidden("cardgroup")
                </div>
            </div>
            <div class="col-md-2 col-xs-12 divboxmd">
                <div class="control-label">
                    Bộ điều khiển
                </div>
                <div>
                    @Html.Action("DroplistMultiSelectTemplate1", "CommonUse", new { _dt = ViewBag.ControllerDT, itemValue = "ItemValue", itemText = "ItemText", selectedValues = ViewBag.ControllerId, Modelname = "ddlcontroller", labelName = "-Lựa chọn-" })
                    @Html.Hidden("lockercontrol")
                </div>
            </div>
            <div class="col-md-2 col-xs-12 divboxmd">
                <div class="control-label">
                    Loại sự kiện
                </div>
                <div>
                    @Html.Action("DroplistMultiSelectTemplate1", "CommonUse", new { _dt = ViewBag.TypeDT, itemValue = "ItemValue", itemText = "ItemText", selectedValues = ViewBag.Type, Modelname = "ddlType", labelName = "-Lựa chọn-" })
                    @Html.Hidden("type")
                </div>
            </div>
        </div>
       
        <div class="row">
            <div class="col-md-12 col-xs-12 divboxmd">
                @Html.Action("Actions", "Home", new { ActionName = "Search", ControllerName = "ReportLockerEvent" })

                @Html.Action("Actions", "Home", new { ActionName = "Index", ControllerName = "ReportLockerEvent" })

                @Html.Action("Actions", "Home", new { ActionName = "Export", ControllerName = "ReportLockerEvent" })

            </div>

        </div>
      
     
    }


<div class="hr hr-18 dotted hr-24"></div>

<div class="row">
    <div class="col-xs-12">
        <div class="divScroll">
            <table class="table  table-bordered table-hover">
                <thead>
                    <tr class="headerSort">
                        <th class="center">
                            STT
                        </th>
                        <th class="center">
                            Số thẻ
                        </th>
                        <th class="center">
                            Mã thẻ
                        </th>
                        <th class="center">
                            Nhóm thẻ
                        </th>
                        <th class="center">
                            Ngăn
                        </th>
                        <th class="center">
                            Bộ điều khiển
                        </th>
                        <th class="center">
                            Ảnh vào
                        </th>
                        <th class="center">
                            Ảnh ra
                        </th>
                        <th class="center">
                            Loại sự kiện
                        </th>
                        <th class="center">
                            Trạng thái
                        </th>
                        <th class="center">
                            Ngày tạo
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Data.Any())
                    {                       
                        foreach (var item in Model.Data)
                        {                         
                            <tr>
                                <td align="center">@item.RowNumber</td>
                                <td align="center">
                                    @item.CardNo
                                </td>
                                <td align="center">
                                    @item.CardNumber
                                </td>
                                <td>
                                    @item.CardGroupID
                                </td>
                                <td align="center">
                                    @item.LockerIndex
                                </td>
                                <td align="center">
                                    @item.ControllerID
                                </td>
                                <td align="center">
                                    <div class="ace-thumbnails clearfix" style="display:inline-flex">
                                        @if (!string.IsNullOrWhiteSpace(item.PicIn))
                                        {
                                            @Html.Action("ImageFTP", new { filename = item.PicIn, description = "Ảnh", type = "INOUT" })
                                        }
                                    </div>
                                </td>
                                <td align="center">
                                    <div class="ace-thumbnails clearfix" style="display:inline-flex">
                                        @if (!string.IsNullOrWhiteSpace(item.PicOut))
                                        {
                                            @Html.Action("ImageFTP", new { filename = item.PicOut, description = "Ảnh", type = "INOUT" })
                                        }
                                    </div>
                                </td>
                                <td align="center">
                                    @switch (item.EventType)
                                    {
                                        case "1":
                                            <span class="label label-sm label-success">Nạp cố định</span>
                                            break;
                                        case "2":
                                            <span class="label label-sm label-info">Thẻ tức thời</span>
                                            break;
                                        case "3":
                                            <span class="label label-sm label-warning">Nhận dạng khuôn mặt</span>
                                            break;
                                    }
                                </td>
                                <td align="center">
                                    @switch (item.EventCode)
                                    {
                                        case "1":
                                            <span class="label label-sm label-pink">Gửi đồ</span>
                                            break;
                                        case "2":
                                            <span class="label label-sm label-purple">Lấy đồ</span>
                                            break;                                                                           
                                    }
                                </td>
                                <td align="center">
                                    @Convert.ToDateTime(item.DateCreated).ToString("dd/MM/yyy HH:mm:ss")
                                </td>

                            </tr>
                        }
                                                }
                </tbody>
            </table>
        </div>

    </div>
    @if (Model.Data.Any())
    {
        <div class="col-xs-12">
            <div class="pull-right">
                @Html.GeneratePagingFooter(Model.TotalPage, Model.PageIndex, Model.PageSize, "pagination", x => Url.Action("ReportLockerEvent", "Report", new
           {
               page = x,
               key = ViewBag.KeyWord,
               cardgroup = ViewBag.CardGroupId,
               datefrompicker = ViewBag.DateFromPickerValue,
               fromdate = ViewBag.fromdateValue,
               todate = ViewBag.todateValue,
               lockercontrol = ViewBag.ControllerId,
               type = ViewBag.Type
           }))
            </div>
        </div>
    }
</div>

@section scripts{
    <script src="~/Scripts/ExcelColumn.js"></script>
    <script>
        jQuery(function ($) {

                                            var $overflow = '';
                                            var colorbox_params = {
                rel: 'colorbox',
                reposition: true,
                scalePhotos: true,
                scrolling: false,
                previous: '<i class="ace-icon fa fa-arrow-left"></i>',
                next: '<i class="ace-icon fa fa-arrow-right"></i>',
                close: '&times;',
                current: '{current} of {total}',
                maxWidth: '100%',
                maxHeight: '100%',
                onOpen: function () {
                    $overflow = document.body.style.overflow;
                                                document.body.style.overflow = 'hidden';
                                            },
                onClosed: function () {
                                                document.body.style.overflow = $overflow;
                                            },
                onComplete: function () {
                    $.colorbox.resize();
                                            }
                                        };

            $('.ace-thumbnails [data-rel="colorbox"]').colorbox(colorbox_params);
            $("#cboxLoadingGraphic").html("<i class='ace-icon fa fa-spinner orange fa-spin'></i>");//let's add a custom loading icon


            $(document).one('ajaxloadstart.page', function (e) {
                $('#colorbox, #cboxOverlay').remove();
            });



        });

        $(document).ready(function () {
            $('#ddlcardgroup').change(function () {
                var str = '';
                var cmd = $(this);
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ',';
                });
                $('#cardgroup').val(str);
            });

            $('#ddlcontroller').change(function () {
                var str = '';
                var cmd = $(this);
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ',';
                });
                $('#lockercontrol').val(str);
            });

            $('#ddlType').change(function () {
                var str = '';
                var cmd = $(this);
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ',';
                });
                $('#type').val(str);
            });

            //$('#ddlExcelColumn').change(function () {
            //    var cmd = $(this);
            //    var str = '';
            //    cmd.parent().find('ul.multiselect-container li.active').each(function () {
            //        var _cmd = $(this);
            //        str += _cmd.find('input[type=checkbox]').val() + ',';
            //    });
            //    $('#excelcol').val(str);
            //});
            //Export excel
            $('button[name=btnExport]').click(function () {
                $('#chkExport').val('1');
                $('#frmReportIn').submit();
            });

            $('button[name=btnFilter]').click(function () {
                $('#chkExport').val('0'); // ko xuat xxcel
                $('#frmReportIn').submit();
            });

            //Xóa 1 bản ghi
            //DeleteSubmit(_prefixParkingDomain + '/Report/DeleteEventIn')
        });
    </script>
}
