@using Kztek.Model.CustomModel
@using Kztek.Web.Core.Extensions
@using Kztek.Web.Attributes
@using Kztek.Web.Core.Functions

@model PageModel<Kztek.Model.Models.LockerEvent.tblLockerAlarmReport>

@{
    /**/

    ViewBag.Title = "ReportLokerAlarm";

}

<div class="page-header">
    <h1>
        Danh sách sự kiện cảnh báo (<span>@Model.TotalItem</span>)
    </h1>
</div>


@using (Html.BeginForm("ReportLokerAlarm", "Report", FormMethod.Get, new { id = "frmReportIn" }))
{
    @Html.Hidden("chkExport", "0")
    <div class="row">
        <div class="col-md-2 col-xs-12 divboxmd">
            <label class="control-label"> Từ khóa: </label>
            <input type="text" name="key" value="@ViewBag.KeyWord" class="form-control" />
        </div>

        <div class="col-md-3 col-xs-12 divboxmd">
            <label class="control-label"> Từ ngày </label>
            <div class="form-group">
                <div class='input-group date datetimepicker' id='datetimepicker6'>
                    @Html.TextBox("fromdate", (string)ViewBag.fromdateValue, new { @class = "form-control" })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-xs-12 divboxmd">
            <label class="control-label"> Đến ngày </label>
            <div class="form-group">
                <div class='input-group date' id='datetimepicker7'>
                    @Html.TextBox("todate", (string)ViewBag.todateValue, new { @class = "form-control" })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
        </div>
       
    </div>
    <div class="row">
        <div class="col-md-2 col-xs-12 divboxmd">
            <label class="control-label">
                Sự kiện
            </label>
            <div>
                @Html.DropDownList("lockerEventCode", new SelectList(ViewBag.lockerEventCodeLst, "ItemValue", "ItemText", ViewBag.typeValue), "--Lựa chọn--", new { @class = "form-control" })
            </div>
        </div>
        <div class="col-md-2 col-xs-12 divboxmd">
            <label class="control-label">
                Loại sự kiện
            </label>
            <div>
                @Html.DropDownList("lockerEventType", new SelectList(ViewBag.lockerEventTypeLst, "ItemValue", "ItemText", ViewBag.lockerEventType), "--Lựa chọn--", new { @class = "form-control" })
            </div>
        </div>

        <div class="col-md-2 col-xs-12 divboxmd">
            <label class="control-label">
                Cảnh báo
            </label>
            <div>
                @Html.DropDownList("lockerAlarmCode", new SelectList(ViewBag.lockerAlarmCodeLst, "ItemValue", "ItemText", ViewBag.lockerAlarmCode), "--Lựa chọn--", new { @class = "form-control" })
            </div>
        </div>
        <div class="col-md-2 col-xs-12 divboxmd">

            <label class="control-label">
                Bộ điều khiển
            </label>
            <div>
                @Html.Action("DroplistMultiSelectTemplate1", "CommonUse", new { _dt = ViewBag.ControllerDT, itemValue = "ItemValue", itemText = "ItemText", selectedValues = ViewBag.ControllerId, Modelname = "ddlcontroller", labelName = "-Lựa chọn-" })
                @Html.Hidden("objcontrol")
            </div>

        </div>
        <div class="col-md-2 col-xs-12 divboxmd">
            <label class="control-label">
                Nhóm thẻ
            </label>
            <div>
                @Html.Action("DroplistMultiSelectTemplate1", "CommonUse", new { _dt = ViewBag.CardGroupLst, itemValue = "ItemValue", itemText = "ItemText", selectedValues = ViewBag.CardGroupId, Modelname = "ddlCardGroup", labelName = "-Lựa chọn-" })
                @Html.Hidden("objCardGroup")
            </div>
        </div>


    </div>

    <div class="row">
        <div class="col-md-12 col-xs-12 divboxmd">
            @Html.Action("Actions", "Home", new { ActionName = "Search", ControllerName = "ReportLokerAlarm" })

            @Html.Action("Actions", "Home", new { ActionName = "Index", ControllerName = "ReportLokerAlarm" })

            @Html.Action("Actions", "Home", new { ActionName = "Export", ControllerName = "ReportLokerAlarm" })

        </div>

    </div>


}


<div class="hr hr-18 dotted hr-24"></div>

<div class="row">
    <div class="col-xs-12">
        <div class="divScroll">
            <table class="table  table-bordered table-hover">
                <thead>
                    <tr class="headerSort">
                        <th class="center">
                            STT
                        </th>
                        <th class="center">
                            Số thẻ
                        </th>
                        <th class="center">
                            Mã thẻ
                        </th>
                        <th class="center">
                            Nhóm thẻ
                        </th>
                        <th class="center">
                            Bộ điều khiển
                        </th>
                        <th class="center">
                            Ngăn
                        </th>
                        <th class="center">
                            Sự kiện
                        </th>
                        <th class="center">
                            Loại sự kiện
                        </th>
                        <th class="center">
                            Cảnh báo
                        </th>
                        <th class="center">
                            Ngày thao tác
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Data.Any())
                    {
                        foreach (var item in Model.Data)
                        {
                            <tr>
                                <td align="center">@item.RowNumber</td>
                                <td align="center">
                                    @item.CardNo
                                </td>
                                <td align="center">
                                    @item.CardNumber
                                </td>

                                <td align="center">
                                    @item.CardGruopName
                                </td>
                                <td>
                                    @item.ControllerName
                                </td>
                                <td align="center">
                                    @item.LockerIndex
                                </td>
                                <td align="center">
                                    @if (item.EventCode == 1)
                                    {
                                        <P>Check in</P>
                                    }
                                    else
                                    {
                                        <P>Check out</P>
                                    }
                                </td>
                                <td align="center">
                                    @switch (item.EventType)
                                    {
                                        case "1":
                                            <p>Nạp cố định</p>
                                            break;
                                        case "2":
                                            <p>Thẻ tức thời</p>
                                            break;
                                        case "3":
                                            <p>Nhận dạng khuôn mặt</p>
                                            break;
                                    }
                                </td>
                                <td align="center">
                                    @switch (item.AlarmCode)
                                    {
                                        case "1":
                                            <p>Thẻ không tồn tại</p>
                                            break;
                                        case "2":
                                            <p>Thẻ chưa đăng ký</p>
                                            break;
                                        case "3":
                                            <p>Chưa gửi đồ</p>
                                            break;
                                    }
                                </td>
                                <td align="center">
                                    @item.DateCreated.ToString("dd/MM/yyyy hh:mm:ss")
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>

    </div>
    @if (Model.Data.Any())
    {
        <div class="col-xs-12">
            <div class="pull-right">
                @Html.GeneratePagingFooter(Model.TotalPage, Model.PageIndex, Model.PageSize, "pagination", x => Url.Action("ReportLokerAlarm", "Report", new
           {
               page = x,
               key = ViewBag.KeyWord,
               datefrompicker = ViewBag.DateFromPickerValue,
               fromdate = ViewBag.fromdateValue,
               todate = ViewBag.todateValue,
               objcontrol = ViewBag.ControllerId,
               lockerAlarmCode = ViewBag.lockerAlarmCode,
               lockerEventType = ViewBag.lockerEventType,
               lockerEventCode = ViewBag.lockerEventCode,
               CardGroupId = ViewBag.CardGroupId
                                        }))
            </div>
        </div>
    }
</div>

@section scripts{
    <script src="~/Scripts/ExcelColumn.js"></script>
    <script>
        jQuery(function ($) {

            var $overflow = '';
            var colorbox_params = {
                rel: 'colorbox',
                reposition: true,
                scalePhotos: true,
                scrolling: false,
                previous: '<i class="ace-icon fa fa-arrow-left"></i>',
                next: '<i class="ace-icon fa fa-arrow-right"></i>',
                close: '&times;',
                current: '{current} of {total}',
                maxWidth: '100%',
                maxHeight: '100%',
                onOpen: function () {
                    $overflow = document.body.style.overflow;
                    document.body.style.overflow = 'hidden';
                },
                onClosed: function () {
                    document.body.style.overflow = $overflow;
                },
                onComplete: function () {
                    $.colorbox.resize();
                }
            };

            $('.ace-thumbnails [data-rel="colorbox"]').colorbox(colorbox_params);
            $("#cboxLoadingGraphic").html("<i class='ace-icon fa fa-spinner orange fa-spin'></i>");//let's add a custom loading icon


            $(document).one('ajaxloadstart.page', function (e) {
                $('#colorbox, #cboxOverlay').remove();
            });

            $('#datetimepicker6').datetimepicker({
                format: 'DD/MM/YYYY',
                allowInputToggle: true
            });
            $('#datetimepicker7').datetimepicker({
                format: 'DD/MM/YYYY',
                allowInputToggle: true
            });
            $("#datetimepicker6").on("dp.change", function (e) {
                $('#datetimepicker7').data("DateTimePicker").minDate(e.date);
            });
            $("#datetimepicker7").on("dp.change", function (e) {
                $('#datetimepicker6').data("DateTimePicker").maxDate(e.date);
            });

        });

        $(document).ready(function () {

            $('#ddlcontroller').change(function () {
                var str = '';
                var cmd = $(this);
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ',';
                });
                $('#objcontrol').val(str);
            });

            $('#ddlCardGroup').change(function () {
                var str = '';
                var cmd = $(this);
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ',';
                });
                $('#objCardGroup').val(str);
            });

            $('#ddlExcelColumn').change(function () {
                var cmd = $(this);
                var str = '';
                cmd.parent().find('ul.multiselect-container li.active').each(function () {
                    var _cmd = $(this);
                    str += _cmd.find('input[type=checkbox]').val() + ',';
                });
                $('#excelcol').val(str);
            });
            //Export excel
            $('button[name=btnExport]').click(function () {
                $('#chkExport').val('1');
                $('#frmReportIn').submit();
            });

            $('button[name=btnFilter]').click(function () {
                $('#chkExport').val('0'); // ko xuat xxcel
                $('#frmReportIn').submit();
            });
        });
    </script>
}
